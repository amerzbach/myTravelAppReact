{"version":3,"sources":["components/Navbar.js","components/hero/hero.js","services/Api.js","services/DateTimeFormating.js","components/Home/HomeForm.js","components/Home/HomeList.js","containers/Home.js","components/Flights/FlightsForm.js","components/Flights/FlightsList.js","containers/Flights.js","components/Hotels/HotelsForm.js","components/Hotels/HotelsList.js","containers/Hotels.js","containers/HotelDetails.js","components/Activities/ActivitiesForm.js","components/Activities/ActivitiesList.js","containers/Activities.js","containers/ActivityDetails.js","App.js","serviceWorker.js","index.js"],"names":["CustomNavbar","state","prevScrollpos","window","pageYOffset","background","handleScroll","_this","currentScrollPos","setState","addEventListener","this","removeEventListener","react_default","a","createElement","Navbar","className","variant","Brand","href","Nav","Link","Component","Hero","dist_default","src","props","videosrc","h1","h2","getFlights","flightFrom","flightTo","dateFlightFrom","dateFlightTo","axios","post","then","response","console","log","data","getHotels","getHotelDetails","hotelId","get","concat","getActivities","getActivityDetails","activityId","getAll","getDuration","duration","replace","getDateHour","date","newDate","Date","year","getFullYear","month","getMonth","dt","getDate","hour","getHours","minutes","getMinutes","getDateApi","getToday","num","setHours","setDate","getDatePlus","getFormDate","HomeForm","flightsDataInbound","flightsDataOutbound","handleChange","event","_event$target","target","name","value","Object","defineProperty","handleDateFlightFromChange","newDateFrom","handleDateFlightToChange","newDateTo","handleSubmit","preventDefault","_this$state","trackPromise","activities","refreshHomeList","ScheduleResource","Schedule","hotels","hotelDetails","activitiesDetails","catch","err","align","Form","onSubmit","style","width","Row","Col","lg","Label","htmlFor","Control","type","onChange","id","placeholder","required","min","Button","size","HomeList","activityDetails","height","zoom","refreshHotelDetails","refreshActivityDetails","_this2","position","zIndex","Tabs","defaultActiveKey","inboundFlights","length","Tab","eventKey","title","Table","striped","bordered","hover","map","Flight","Array","isArray","stopsNumber","TotalJourney","Duration","index","rowSpan","MarketingCarrier","AirlineID","FlightNumber","Departure","AirportCode","Arrival","ScheduledTimeLocal","DateTime","outboundFlights","Container","Hotel","Card","react_router_dom","onClick","bind","code","Img","images","path","class","Body","Title","content","toUpperCase","categoryCode","alt","Text","description","getOwnPropertyNames","hotel","padding","category","address","postalCode","city","country","esm","latitude","coordinates","longitude","react_icons_kit","icon","home","Carousel","image","Item","activity","media","urls","resource","dangerouslySetInnerHTML","__html","Home","hero_hero","HomeForm_HomeForm","HomeList_HomeList","FlightsForm","refreshflightsList","nonStopOnly","FlightsList","Flights","FlightsForm_FlightsForm","Flights_FlightsList","HotelsForm","hotelsData","error","refreshHotelsList","HotelsList","textAlignment","Hotels","HotelsForm_HotelsForm","HotelsList_HotelsList","HotelDetails","getHotelData","match","params","entries","backgroundColor","textAlign","Carousel_default","ActivitiesForm","activitiesData","activitiesList","refreshActivitiesList","ActivitiesList","Activities","ActivitiesForm_ActivitiesForm","ActivitiesList_ActivitiesList","ActivityDetails","getActivityData","App","Fragment","Navbar_CustomNavbar","react_router","exact","component","Boolean","location","hostname","ReactDOM","render","src_App","usePromiseTracker","promiseInProgress","display","justifyContent","alignItems","react_loader_spinner_default","color","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.382099ea.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Navbar, Nav } from \"react-bootstrap\";\n\nexport default class CustomNavbar extends Component {\n  state = {\n    prevScrollpos: window.pageYOffset,\n    background: \"transparentNav\"\n  };\n\n  handleScroll = () => {\n    const { prevScrollpos } = this.state;\n\n    const currentScrollPos = window.pageYOffset;\n    if (prevScrollpos > currentScrollPos) {\n      this.setState({\n        prevScrollpos: currentScrollPos,\n        background: \"transparentNav\"\n      });\n    } else {\n      this.setState({\n        prevScrollpos: currentScrollPos,\n        background: \"colorNav\"\n      });\n    }\n  };\n\n  componentDidMount() {\n    window.addEventListener(\"scroll\", this.handleScroll);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"scroll\", this.handleScroll);\n  }\n\n  render() {\n    return (\n      <Navbar\n        className={\"nav fixed-top \" + this.state.background}\n        variant=\"dark\"\n      >\n        <Navbar.Brand href=\"/\">myTravelApp</Navbar.Brand>\n        <Nav.Link href=\"/Flights\" className=\"navLink\">\n          Flights\n        </Nav.Link>\n        <Nav.Link href=\"/Hotels\" className=\"navLink\">\n          Hotels\n        </Nav.Link>\n        <Nav.Link href=\"/Activities\" className=\"navLink\">\n          Activities\n        </Nav.Link>\n      </Navbar>\n    );\n  }\n}\n","import React, { Component } from 'react'\nimport \"./hero.css\"\n\nimport BackgroundVideo from 'react-background-video-player';\n\nclass Hero extends Component {\n\n\n\n  render() {\n    return (\n      <div className=\"hero\">\n        <BackgroundVideo\n        src={this.props.videosrc}\n        />\n        <div className=\"hero-text\">\n          <h1>{this.props.h1}</h1>\n          <h2>{this.props.h2}</h2>\n        </div>\n      </div>\n          )\n        }\n      }\n\n      export default Hero;","import axios from \"axios\";\n\n\nconst getFlights = (flightFrom, flightTo, dateFlightFrom, dateFlightTo) => (\n  axios\n    .post(\"/api/Flights\", {\n      flightFrom: flightFrom,\n      flightTo: flightTo,\n      dateFlightFrom: dateFlightFrom,\n      dateFlightTo: dateFlightTo\n    })\n    .then(response => {\n      console.log(response.data);\n      return response.data;\n    })\n) \n\nconst getHotels = (flightTo, dateFlightFrom, dateFlightTo) => (\n  axios\n  .post(\"/api/Hotels\", {\n    flightTo: flightTo,\n    dateFlightFrom: dateFlightFrom,\n    dateFlightTo: dateFlightTo\n  })\n  .then(response => {\n    console.log(response.data);\n    return response.data;\n  })\n)\n\nconst getHotelDetails = (hotelId) => (\n  axios\n  .get(`/api/Hotels/search/${hotelId}`)\n  .then(response => {\n    return response.data;\n  })\n)\n\nconst getActivities = (flightTo, dateFlightFrom, dateFlightTo) => (\n  axios\n  .post(\"/api/Activities\", {\n    flightTo: flightTo,\n    dateFlightFrom: dateFlightFrom,\n    dateFlightTo: dateFlightTo\n  })\n  .then(response => {\n    console.log(response.data);\n    return response.data;\n  })\n)\n\nconst getActivityDetails = (activityId) => (\n  axios\n  .get(`/api/Activities/search/${activityId}`)\n  .then(response => {\n    console.log(response);\n    return response.data;\n  })\n)\n\nconst getAll = (flightFrom, flightTo, dateFlightFrom, dateFlightTo) => (\n  axios\n    .post(\"/api/All\", {\n      flightFrom: flightFrom,\n      flightTo: flightTo,\n      dateFlightFrom: dateFlightFrom,\n      dateFlightTo: dateFlightTo\n    })\n    .then(response => {\n      console.log(response.data);\n      return response.data;\n    })\n) \n\nexport { getFlights,getHotels, getHotelDetails, getActivities, getActivityDetails, getAll };\n","const getDuration = duration => {\n  // Transforms format of durations strings like P1DT5H35M into 1D 5H 35m\n  // Using regular expressions for formating\n\n  duration = duration.replace(/P/, \"\");\n  duration = duration.replace(/T/, \"\");\n  duration = duration.replace(/D/, \"D \");\n  duration = duration.replace(/H/, \"H \");\n  duration = duration.replace(/M/, \"m\");\n  return duration;\n};\n\nconst getDateHour = date => {\n  // Transforms format of date hours like this 2019-07-29T06:20 into 6:20 29/07/2019\n  \n  let newDate = new Date(date);\n\n  let year = newDate.getFullYear();\n  let month = newDate.getMonth() + 1;\n  let dt = newDate.getDate();\n  let hour = newDate.getHours();\n  let minutes = newDate.getMinutes();\n\n  if (dt < 10) {\n    dt = \"0\" + dt;\n  }\n  if (month < 10) {\n    month = \"0\" + month;\n  }\n  if (minutes < 10 ) {\n    minutes = \"0\" + minutes;\n  }\n\n  return hour + \":\" + minutes + \" \"+ dt + \"/\" + month + \"/\" + year;\n};\n\n\nconst getDateApi = date => {\n  // Transforms format of date hours like this 2019-07-29T06:20 into 2019-07-29 for Api Calls\n  \n  let newDate = new Date(date);\n\n  let year = newDate.getFullYear();\n  let month = newDate.getMonth() + 1;\n  let dt = newDate.getDate();\n\n  if (dt < 10) {\n    dt = \"0\" + dt;\n  }\n  if (month < 10) {\n    month = \"0\" + month;\n  }\n\n  return year + \"-\" + month + \"-\" + dt;\n};\n\nconst getToday = (num) => {\n  // Returs date of today + num \n  \n  let newDate = new Date();\n  newDate.setHours(0,0)\n  newDate.setDate(newDate.getDate() + num)\n  return newDate;\n\n}\n\nconst getDatePlus = (date,num) => {\n  // Returs date + num \n  \n  let newDate = new Date(date);\n  newDate = newDate.setDate(newDate.getDate() + num)\n  return newDate;\n\n}\n\n\nconst getFormDate = (date) => {\n  // Returs date formated for input type date YYYY-MM-DD\n  \n  let newDate = new Date(date);\n  let year = newDate.getFullYear();\n  let month = newDate.getMonth() + 1;\n  let dt = newDate.getDate();\n\n  if (dt < 10) {\n    dt = \"0\" + dt;\n  }\n  if (month < 10) {\n    month = \"0\" + month;\n  }\n\n  return year + \"-\" + month + \"-\" + dt;\n}\n\n\nexport { getDuration, getDateHour, getDateApi, getToday, getFormDate, getDatePlus };\n","import React, { Component } from \"react\";\nimport { Form, Button, Col } from \"react-bootstrap\";\nimport { getAll } from \"../../services/Api\";\nimport { trackPromise } from \"react-promise-tracker\";\nimport {\n  getToday,\n  getFormDate,\n  getDateApi,\n  getDatePlus\n} from \"../../services/DateTimeFormating\";\n\nexport default class HomeForm extends Component {\n  state = {\n    flightFrom: \"\",\n    flightTo: \"\",\n    dateFlightFrom: getToday(1),\n    dateFlightTo: getToday(4),\n    flightsDataInbound: [],\n    flightsDataOutbound: []\n  };\n\n  handleChange = event => {\n    const { name, value } = event.target;\n\n    this.setState({\n      [name]: value\n    });\n    console.log(name, value);\n  };\n\n  handleDateFlightFromChange = event => {\n    let newDateFrom = new Date(event.target.value);\n    let newDateTo = new Date(this.state.dateFlightTo);\n    if (newDateFrom > newDateTo) {\n      this.setState({\n        dateFlightFrom: newDateFrom,\n        dateFlightTo: getDatePlus(newDateFrom, 1)\n      });\n    } else {\n      this.setState({\n        dateFlightFrom: newDateFrom\n      });\n    }\n  };\n\n  handleDateFlightToChange = event => {\n    let newDateFrom = new Date(this.state.dateFlightFrom);\n    let newDateTo = new Date(event.target.value);\n    if (newDateFrom > newDateTo) {\n      this.setState({\n        dateFlightFrom: getDatePlus(newDateTo, -1),\n        dateFlightTo: newDateTo\n      });\n    } else {\n      this.setState({\n        dateFlightTo: newDateTo\n      });\n    }\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n\n    const { flightFrom, flightTo, dateFlightFrom, dateFlightTo } = this.state;\n\n    trackPromise(\n      getAll(\n        flightFrom,\n        flightTo,\n        getDateApi(dateFlightFrom),\n        getDateApi(dateFlightTo)\n      ).then(response => {\n        console.log(response[3].activities);\n        this.props.refreshHomeList(response[0].ScheduleResource.Schedule,response[1].ScheduleResource.Schedule,response[2].hotels,response[3].activities);\n        this.setState({\n          flightsDataInbound: response[0].ScheduleResource.Schedule,\n          flightsDataOutbound: response[1].ScheduleResource.Schedule,\n          hotelDetails: response[2].hotels,\n          activitiesDetails: response[3].activities\n        });\n      })\n    ).catch(err => {\n      console.log(err);\n    });\n  };\n\n  render() {\n    return (\n      <div align=\"center\">\n        <br />\n\n        <Form onSubmit={this.handleSubmit} style={{ width: \"95%\" }}>\n          <Form.Row>\n            <Col lg=\"3\">\n              <Form.Label htmlFor=\"flightFrom\">From</Form.Label>\n\n              <Form.Control\n                type=\"text\"\n                onChange={this.handleChange}\n                id=\"flightFrom\"\n                name=\"flightFrom\"\n                value={this.state.flightFrom || \"\"}\n                placeholder=\"Origin airport IATA Code\"\n                required\n              />\n            </Col>\n\n            <Col lg=\"3\">\n              <Form.Label htmlFor=\"flightTo\">To</Form.Label>\n\n              <Form.Control\n                type=\"text\"\n                onChange={this.handleChange}\n                id=\"flightTo\"\n                name=\"flightTo\"\n                value={this.state.flightTo || \"\"}\n                placeholder=\"Destination airport IATA Code\"\n                required\n              />\n            </Col>\n\n            <Col lg=\"3\">\n              <Form.Label htmlFor=\"dateFlightFrom\">Depart</Form.Label>\n\n              <Form.Control\n                type=\"date\"\n                onChange={this.handleDateFlightFromChange}\n                id=\"dateFlightFrom\"\n                name=\"dateFlightFrom\"\n                value={getFormDate(this.state.dateFlightFrom)}\n                min={getFormDate(getToday(0))}\n                required\n              />\n            </Col>\n\n            <Col lg=\"3\">\n              <Form.Label htmlFor=\"dateFlightTo\">Return</Form.Label>\n\n              <Form.Control\n                type=\"date\"\n                onChange={this.handleDateFlightToChange}\n                id=\"dateFlightTo\"\n                name=\"dateFlightTo\"\n                value={getFormDate(this.state.dateFlightTo)}\n                min={getFormDate(getToday(0))}\n                required\n              />\n            </Col>\n          </Form.Row>\n\n          <Form.Row>\n            <Col>\n              <br />\n              <Button type=\"submit\" size=\"lg\">Search</Button>\n            </Col>\n          </Form.Row>\n        </Form>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Container,\n  Row,\n  Card,\n  Tabs,\n  Tab,\n  Carousel,\n  Col,\n  Table\n} from \"react-bootstrap\";\nimport { getHotelDetails } from \"../../services/Api\";\nimport { getActivityDetails } from \"../../services/Api\";\nimport { trackPromise } from \"react-promise-tracker\";\nimport ReactMapGL, { Marker } from \"react-map-gl\";\nimport { Icon } from \"react-icons-kit\";\nimport { home } from \"react-icons-kit/icomoon/home\";\nimport { getDuration, getDateHour } from \"../../services/DateTimeFormating\";\n\nexport default class HomeList extends Component {\n  state = {\n    hotelDetails: {},\n    activityDetails: {},\n    width: 400,\n    height: 400,\n    zoom: 12\n  };\n\n  getHotelDetails = hotelId => {\n    trackPromise(\n      getHotelDetails(hotelId)\n        .then(response => {\n          this.setState({\n            hotelDetails: response\n          });\n          this.props.refreshHotelDetails(hotelId);\n        })\n        .catch(err => {\n          console.log(err);\n        })\n    );\n  };\n\n  getActivityDetails = activityId => {\n    trackPromise(\n      getActivityDetails(activityId)\n        .then(response => {\n          this.setState({\n            activityDetails: response\n          });\n          this.props.refreshActivityDetails(activityId);\n        })\n        .catch(err => {\n          console.log(err);\n        })\n    );\n  };\n\n  render() {\n    return (\n      <div\n        style={{\n          position: \"absolute\",\n          zIndex: 1,\n          width: \"100%\",\n          align: \"center\"\n        }}\n      >\n        <br />\n        <center>\n          <div className=\"lightDiv95\">\n            <Tabs defaultActiveKey=\"inbound\">\n              <br />\n              {this.props.inboundFlights.length > 0 && (\n                <Tab eventKey=\"inbound\" title=\"Depart Flights\">\n                  <Table\n                    striped\n                    bordered\n                    hover\n                    variant=\"light\"\n                    id=\"inboundTable\"\n                    className=\"largeTable\"\n                  >\n                    <thead>\n                      <tr>\n                        <th>Duration</th>\n                        <th>Flight</th>\n                        <th>Airports</th>\n                        <th>Dep</th>\n                        <th>Arr</th>\n                      </tr>\n                    </thead>\n\n                    <tbody>\n                      {this.props.inboundFlights.map(Flight => {\n                        if (Array.isArray(Flight.Flight)) {\n                          const stopsNumber = Flight.Flight.length - 1;\n                          const duration = getDuration(\n                            Flight.TotalJourney.Duration\n                          );\n                          return Flight.Flight.map((Flight, index) => {\n                            if (index === 0) {\n                              return (\n                                <tr>\n                                  <td rowSpan={stopsNumber + 1}>\n                                    {duration} <br />\n                                    {stopsNumber}\n                                    {stopsNumber > 1 ? \" Stops\" : \" Stop\"}\n                                  </td>\n                                  <td>\n                                    {Flight.MarketingCarrier.AirlineID}{\" \"}\n                                    {Flight.MarketingCarrier.FlightNumber}\n                                  </td>\n                                  <td>\n                                    {Flight.Departure.AirportCode}-\n                                    {Flight.Arrival.AirportCode}\n                                  </td>\n                                  <td>\n                                    {getDateHour(\n                                      Flight.Departure.ScheduledTimeLocal\n                                        .DateTime\n                                    )}\n                                  </td>\n                                  <td>\n                                    {getDateHour(\n                                      Flight.Arrival.ScheduledTimeLocal.DateTime\n                                    )}\n                                  </td>\n                                </tr>\n                              );\n                            } else {\n                              return (\n                                <tr>\n                                  <td>\n                                    {Flight.MarketingCarrier.AirlineID}{\" \"}\n                                    {Flight.MarketingCarrier.FlightNumber}\n                                  </td>\n                                  <td>\n                                    {Flight.Departure.AirportCode}-\n                                    {Flight.Arrival.AirportCode}\n                                  </td>\n                                  <td>\n                                    {getDateHour(\n                                      Flight.Departure.ScheduledTimeLocal\n                                        .DateTime\n                                    )}\n                                  </td>\n                                  <td>\n                                    {getDateHour(\n                                      Flight.Arrival.ScheduledTimeLocal.DateTime\n                                    )}\n                                  </td>\n                                </tr>\n                              );\n                            }\n                          });\n                        } else {\n                          return (\n                            <tr>\n                              <td>\n                                {getDuration(Flight.TotalJourney.Duration)}{\" \"}\n                                Non-stop\n                              </td>\n                              <td>\n                                {Flight.Flight.MarketingCarrier.AirlineID}{\" \"}\n                                {Flight.Flight.MarketingCarrier.FlightNumber}\n                              </td>\n                              <td>\n                                {Flight.Flight.Departure.AirportCode}-\n                                {Flight.Flight.Arrival.AirportCode}\n                              </td>\n                              <td>\n                                {getDateHour(\n                                  Flight.Flight.Departure.ScheduledTimeLocal\n                                    .DateTime\n                                )}\n                              </td>\n                              <td>\n                                {getDateHour(\n                                  Flight.Flight.Arrival.ScheduledTimeLocal\n                                    .DateTime\n                                )}\n                              </td>\n                            </tr>\n                          );\n                        }\n                      })}\n                    </tbody>\n                  </Table>\n                </Tab>\n              )}\n\n              <br />\n\n              {this.props.outboundFlights.length > 0 && (\n                <Tab eventKey=\"outbound\" title=\"Return Flights\">\n                  <Table\n                    striped\n                    bordered\n                    hover\n                    variant=\"light\"\n                    id=\"outboundTable\"\n                    className=\"largeTable\"\n                  >\n                    <thead>\n                      <tr>\n                        <th>Duration</th>\n                        <th>Flight</th>\n                        <th>Airports</th>\n                        <th>Dep</th>\n                        <th>Arr</th>\n                      </tr>\n                    </thead>\n\n                    <tbody>\n                      {this.props.outboundFlights.map(Flight => {\n                        if (Array.isArray(Flight.Flight)) {\n                          const stopsNumber = Flight.Flight.length - 1;\n                          const duration = getDuration(\n                            Flight.TotalJourney.Duration\n                          );\n                          return Flight.Flight.map((Flight, index) => {\n                            if (index === 0) {\n                              return (\n                                <tr>\n                                  <td rowSpan={stopsNumber + 1}>\n                                    {duration} <br />\n                                    {stopsNumber}\n                                    {stopsNumber > 1 ? \" Stops\" : \" Stop\"}\n                                  </td>\n                                  <td>\n                                    {Flight.MarketingCarrier.AirlineID}{\" \"}\n                                    {Flight.MarketingCarrier.FlightNumber}\n                                  </td>\n                                  <td>\n                                    {Flight.Departure.AirportCode}-\n                                    {Flight.Arrival.AirportCode}\n                                  </td>\n                                  <td>\n                                    {getDateHour(\n                                      Flight.Departure.ScheduledTimeLocal\n                                        .DateTime\n                                    )}\n                                  </td>\n                                  <td>\n                                    {getDateHour(\n                                      Flight.Arrival.ScheduledTimeLocal.DateTime\n                                    )}\n                                  </td>\n                                </tr>\n                              );\n                            } else {\n                              return (\n                                <tr>\n                                  <td>\n                                    {Flight.MarketingCarrier.AirlineID}{\" \"}\n                                    {Flight.MarketingCarrier.FlightNumber}\n                                  </td>\n                                  <td>\n                                    {Flight.Departure.AirportCode}-\n                                    {Flight.Arrival.AirportCode}\n                                  </td>\n                                  <td>\n                                    {getDateHour(\n                                      Flight.Departure.ScheduledTimeLocal\n                                        .DateTime\n                                    )}\n                                  </td>\n                                  <td>\n                                    {getDateHour(\n                                      Flight.Arrival.ScheduledTimeLocal.DateTime\n                                    )}\n                                  </td>\n                                </tr>\n                              );\n                            }\n                          });\n                        } else {\n                          return (\n                            <tr>\n                              <td>\n                                {getDuration(Flight.TotalJourney.Duration)}{\" \"}\n                                Non-stop\n                              </td>\n                              <td>\n                                {Flight.Flight.MarketingCarrier.AirlineID}{\" \"}\n                                {Flight.Flight.MarketingCarrier.FlightNumber}\n                              </td>\n                              <td>\n                                {Flight.Flight.Departure.AirportCode}-\n                                {Flight.Flight.Arrival.AirportCode}\n                              </td>\n                              <td>\n                                {getDateHour(\n                                  Flight.Flight.Departure.ScheduledTimeLocal\n                                    .DateTime\n                                )}\n                              </td>\n                              <td>\n                                {getDateHour(\n                                  Flight.Flight.Arrival.ScheduledTimeLocal\n                                    .DateTime\n                                )}\n                              </td>\n                            </tr>\n                          );\n                        }\n                      })}\n                    </tbody>\n                  </Table>\n                </Tab>\n              )}\n              {this.props.hotelDetails.length > 0 && (\n                <Tab\n                  eventKey=\"hotelsList\"\n                  title=\"Hotels\"\n                  className=\"custom-nav-bg\"\n                >\n                  <div className=\"lightDiv100\">\n                    <br />\n                    <Container className=\"resultsRow\">\n                      <Row className=\"row justify-content-center\">\n                        {this.props.hotelDetails.map(Hotel => {\n                          return (\n                            <Card className=\"col-xl-3 col-lg-3 col-md-12 col-sm-12 col-sm-12 hotelCard border-0\">\n                              <Link\n                                onClick={this.getHotelDetails.bind(\n                                  this,\n                                  Hotel.code\n                                )}\n                              >\n                                <Card.Img\n                                  variant=\"top\"\n                                  src={`http://photos.hotelbeds.com/giata/bigger/${\n                                    Hotel.images[0].path\n                                  }`}\n                                  class=\"card-img-top\"\n                                />\n                              </Link>\n                              <Card.Body>\n                                <Card.Title>\n                                  <Link\n                                    onClick={this.getHotelDetails.bind(\n                                      this,\n                                      Hotel.code\n                                    )}\n                                  >\n                                    {Hotel.name.content.toUpperCase()}\n                                  </Link>\n                                  <br />\n                                  <img\n                                    src={`http://cdn4.hotelopia.com/freya/img/stars/${\n                                      Hotel.categoryCode\n                                    }.gif`}\n                                    alt=\"Hotel Stars\"\n                                  />\n                                </Card.Title>\n                                <Card.Text>\n                                  <p class=\"block-with-text\">\n                                    {Hotel.description.content}\n                                  </p>\n                                </Card.Text>\n                              </Card.Body>\n                            </Card>\n                          );\n                        })}\n                      </Row>\n                    </Container>\n                  </div>\n                </Tab>\n              )}\n              {Object.getOwnPropertyNames(this.state.hotelDetails).length >\n                0 && (\n                <Tab\n                  eventKey=\"hotelDetails\"\n                  title={this.state.hotelDetails.hotel.name.content}\n                >\n                  <div className=\"lightDiv100\" style={{ padding: \"25px\" }}>\n                    <Row>\n                      <Col className=\"col-xl-12 text-left\">\n                        <h2>\n                          {this.state.hotelDetails.hotel.name.content}\n                          <img\n                            src={`http://cdn4.hotelopia.com/freya/img/stars/${\n                              this.state.hotelDetails.hotel.category.code\n                            }.gif`}\n                            alt=\"Hotel Stars\"\n                          />\n                        </h2>\n                      </Col>\n                    </Row>\n                    <Row>\n                      <Col className=\"col-xl-6 col-lg-6 col-md-6 col-sm-12 col-sm-12 text-left\">\n                        <h5>Description</h5>\n                        <p>\n                          {this.state.hotelDetails.hotel.description.content}\n                        </p>\n\n                        <h5>Location</h5>\n                        <p>\n                          {this.state.hotelDetails.hotel.address.content}{\" \"}\n                          {this.state.hotelDetails.hotel.postalCode}{\" \"}\n                          {this.state.hotelDetails.hotel.city.content}{\" \"}\n                          {\n                            this.state.hotelDetails.hotel.country.description\n                              .content\n                          }\n                        </p>\n                        <ReactMapGL\n                          latitude={\n                            this.state.hotelDetails.hotel.coordinates.latitude\n                          }\n                          longitude={\n                            this.state.hotelDetails.hotel.coordinates.longitude\n                          }\n                          width={this.state.width}\n                          height={this.state.height}\n                          zoom={this.state.zoom}\n                        >\n                          <Marker\n                            latitude={\n                              this.state.hotelDetails.hotel.coordinates.latitude\n                            }\n                            longitude={\n                              this.state.hotelDetails.hotel.coordinates\n                                .longitude\n                            }\n                          >\n                            <Icon icon={home} />\n                            <h5>\n                              {this.state.hotelDetails.hotel.name.content}\n                            </h5>\n                          </Marker>\n                        </ReactMapGL>\n                      </Col>\n                      <Col className=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 col-sm-12\">\n                        <h5>Photos</h5>\n                        <center>\n                          <Carousel className=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-sm-12\">\n                            {this.state.hotelDetails.hotel.images.map(image => {\n                              return (\n                                <Carousel.Item>\n                                  <img\n                                    className=\"d-block w-100\"\n                                    src={`http://photos.hotelbeds.com/giata/bigger/${\n                                      image.path\n                                    }`}\n                                    alt=\" \"\n                                  />\n                                </Carousel.Item>\n                              );\n                            })}\n                          </Carousel>\n                        </center>\n                      </Col>\n                    </Row>\n                  </div>\n                </Tab>\n              )}\n\n              {this.props.activitiesDetails.length > 0 && (\n                <Tab\n                  eventKey=\"activitiesList\"\n                  title=\"Activities\"\n                  className=\"custom-nav-bg\"\n                >\n                  <div className=\"lightDiv100\">\n                    <br />\n                    <Container style={{ align: \"center\" }}>\n                      <Row className=\"row justify-content-center\">\n                        {this.props.activitiesDetails.map(activity => {\n                          return (\n                            <Card className=\"col-xl-3 col-lg-3 col-md-12 col-sm-12 col-sm-12 hotelCard border-0\">\n                              <Link\n                                onClick={this.getActivityDetails.bind(\n                                  this,\n                                  activity.code\n                                )}\n                              >\n                                <Card.Img\n                                  variant=\"top\"\n                                  src={`${\n                                    activity.content.media.images[0].urls[1]\n                                      .resource\n                                  }`}\n                                  class=\"card-img-top\"\n                                />\n                              </Link>\n                              <Card.Body>\n                                <Card.Title>\n                                  <Link\n                                    onClick={this.getActivityDetails.bind(\n                                      this,\n                                      activity.code\n                                    )}\n                                  >\n                                    {activity.content.name.toUpperCase()}\n                                  </Link>\n                                </Card.Title>\n                                <Card.Text>\n                                  <p\n                                    class=\"block-with-text\"\n                                    dangerouslySetInnerHTML={{\n                                      __html: activity.content.description\n                                    }}\n                                  />\n                                </Card.Text>\n                              </Card.Body>\n                            </Card>\n                          );\n                        })}\n                      </Row>\n                    </Container>\n                  </div>\n                </Tab>\n              )}\n              {Object.getOwnPropertyNames(this.state.activityDetails).length >\n                0 && (\n                <Tab\n                  eventKey=\"activityDetails\"\n                  title={this.state.activityDetails.name}\n                >\n                  <div className=\"lightDiv100\" style={{ padding: \"25px\" }}>\n                    <h2>{this.state.activityDetails.name}</h2>\n\n                    <div\n                      dangerouslySetInnerHTML={{\n                        __html: this.state.activityDetails.description\n                      }}\n                      align=\"left\"\n                    />\n                  </div>\n                </Tab>\n              )}\n            </Tabs>\n          </div>\n        </center>\n        <br />\n        <br />\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Hero from \"../components/hero/hero\";\nimport HomeForm from \"../components/Home/HomeForm\";\nimport HomeList from \"../components/Home/HomeList\";\n\nexport default class Home extends Component {\n  state = {\n    flightsDataInbound: [],\n    flightsDataOutbound: [],\n    hotelDetails: [],\n    activitiesDetails: [],\n    hotelId: 0,\n    activityId: 0\n  };\n\n  refreshHotelDetails = response => {\n    this.setState({\n      hotelId: response\n    });\n  };\n\n  refreshActivityDetails = response => {\n    this.setState({\n      activityId: response\n    });\n  };\n\n  refreshHomeList = (\n    flightsDataInbound,\n    flightsDataOutbound,\n    hotelDetails,\n    activitiesDetails\n  ) => {\n    this.setState({\n      flightsDataInbound: flightsDataInbound,\n      flightsDataOutbound: flightsDataOutbound,\n      hotelDetails: hotelDetails,\n      activitiesDetails: activitiesDetails\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <center>\n          <Hero\n            videosrc=\"https://pixabay.com/videos/download/video-10816_medium.mp4\"\n            h1=\"myTravelApp\"\n            h2=\"Flights + Hotels + Activities\"\n          />\n\n          <HomeForm refreshHomeList={this.refreshHomeList} />\n          <HomeList\n            inboundFlights={this.state.flightsDataInbound}\n            outboundFlights={this.state.flightsDataOutbound}\n            hotelDetails={this.state.hotelDetails}\n            activitiesDetails={this.state.activitiesDetails}\n            refreshHotelDetails={this.refreshHotelDetails}\n            refreshActivityDetails={this.refreshActivityDetails}\n          />\n        </center>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Form, Button, Col } from \"react-bootstrap\";\nimport { getFlights } from \"../../services/Api\";\nimport { trackPromise } from \"react-promise-tracker\";\nimport {\n  getToday,\n  getFormDate,\n  getDateApi\n} from \"../../services/DateTimeFormating\";\n\nexport default class FlightsForm extends Component {\n  state = {\n    flightFrom: \"\",\n    flightTo: \"\",\n    dateFlightFrom: getToday(0),\n    dateFlightTo: getToday(0),\n    flightsDataInbound: [],\n    flightsDataOutbound: [],\n  };\n\n  handleChange = event => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  handleDateFlightFromChange = event => {\n    let newDateFrom = new Date(event.target.value);\n    let newDateTo = new Date(this.state.dateFlightTo);\n    if (newDateFrom > newDateTo) {\n      this.setState({\n        dateFlightFrom: newDateFrom,\n        dateFlightTo: newDateFrom\n      });\n    } else {\n      this.setState({\n        dateFlightFrom: newDateFrom\n      });\n    }\n  };\n\n  handleDateFlightToChange = event => {\n    let newDateFrom = new Date(this.state.dateFlightFrom);\n    let newDateTo = new Date(event.target.value);\n    if (newDateFrom > newDateTo) {\n      this.setState({\n        dateFlightFrom: newDateTo,\n        dateFlightTo: newDateTo\n      });\n    } else {\n      this.setState({\n        dateFlightTo: newDateTo\n      });\n    }\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n\n    const { flightFrom, flightTo, dateFlightFrom, dateFlightTo } = this.state;\n\n    trackPromise(\n      getFlights(\n        flightFrom,\n        flightTo,\n        getDateApi(dateFlightFrom),\n        getDateApi(dateFlightTo)\n      ).then(response => {\n        this.props.refreshflightsList(response.flightsDataInbound,response.flightsDataOutbound,this.state.nonStopOnly);\n        this.setState({\n          flightsDataInbound: response.flightsDataInbound,\n          flightsDataOutbound: response.flightsDataOutbound\n        });\n      })\n    ).catch(err => {\n      console.log(err);\n    });\n  };\n\n  render() {\n    return (\n      <div align=\"center\">\n        <br />\n\n        <Form onSubmit={this.handleSubmit} style={{ width: \"95%\" }}>\n          <Form.Row>\n            <Col lg=\"3\">\n              <Form.Label htmlFor=\"flightFrom\">From</Form.Label>\n\n              <Form.Control\n                type=\"text\"\n                onChange={this.handleChange}\n                id=\"flightFrom\"\n                name=\"flightFrom\"\n                value={this.state.flightFrom || \"\"}\n                placeholder=\"Origin airport IATA Code\"\n                required\n              />\n            </Col>\n\n            <Col lg=\"3\">\n              <Form.Label htmlFor=\"flightTo\">To</Form.Label>\n\n              <Form.Control\n                type=\"text\"\n                onChange={this.handleChange}\n                id=\"flightTo\"\n                name=\"flightTo\"\n                value={this.state.flightTo || \"\"}\n                placeholder=\"Destination airport IATA Code\"\n                required\n              />\n            </Col>\n\n            <Col lg=\"3\">\n              <Form.Label htmlFor=\"dateFlightFrom\">Depart</Form.Label>\n\n              <Form.Control\n                type=\"date\"\n                onChange={this.handleDateFlightFromChange}\n                id=\"dateFlightFrom\"\n                name=\"dateFlightFrom\"\n                value={getFormDate(this.state.dateFlightFrom)}\n                min={getFormDate(getToday(0))}\n                required\n              />\n            </Col>\n\n            <Col lg=\"3\">\n              <Form.Label htmlFor=\"dateFlightTo\">Return</Form.Label>\n\n              <Form.Control\n                type=\"date\"\n                onChange={this.handleDateFlightToChange}\n                id=\"dateFlightTo\"\n                name=\"dateFlightTo\"\n                value={getFormDate(this.state.dateFlightTo)}\n                min={getFormDate(getToday(0))}\n              />\n            </Col>\n          </Form.Row>\n          <Form.Row>\n            <Col>\n              <br />\n              <Button type=\"submit\" size=\"lg\">Flight Search</Button>\n            </Col>\n          </Form.Row>\n        </Form>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { Table, Tabs, Tab } from \"react-bootstrap\";\nimport { getDuration, getDateHour } from \"../../services/DateTimeFormating\";\n\nconst FlightsList = props => {\n  return (\n    <div\n      style={{\n        position: \"absolute\",\n        zIndex: 1,\n        width: \"100%\",\n        align: \"center\"\n      }}\n    >\n      <br />\n      <center>\n      <div className=\"lightDiv95\">\n          <Tabs defaultActiveKey=\"inbound\">\n            <br />\n\n            {props.inboundFlights.length > 0 && (\n              <Tab\n                eventKey=\"inbound\"\n                title=\"Depart Flights\"\n              >\n                <Table\n                  striped\n                  bordered\n                  hover\n                  variant=\"light\"\n                  id=\"inboundTable\"\n                  className=\"largeTable\"\n                >\n                  <thead>\n                    <tr>\n                      <th>Duration</th>\n                      <th>Flight</th>\n                      <th>Airports</th>\n                      <th>Dep</th>\n                      <th>Arr</th>\n                    </tr>\n                  </thead>\n\n                  <tbody>\n                    {props.inboundFlights.map(Flight => {\n                      if (Array.isArray(Flight.Flight)) {\n                        const stopsNumber = Flight.Flight.length - 1;\n                        const duration = getDuration(\n                          Flight.TotalJourney.Duration\n                        );\n                        return Flight.Flight.map((Flight, index) => {\n                          if (index === 0) {\n                            return (\n                              <tr>\n                                <td rowSpan={stopsNumber + 1}>\n                                  {duration} <br />\n                                  {stopsNumber}\n                                  {stopsNumber > 1 ? \" Stops\" : \" Stop\"}\n                                </td>\n                                <td>\n                                  {Flight.MarketingCarrier.AirlineID}{\" \"}\n                                  {Flight.MarketingCarrier.FlightNumber}\n                                </td>\n                                <td>\n                                  {Flight.Departure.AirportCode}-\n                                  {Flight.Arrival.AirportCode}\n                                </td>\n                                <td>\n                                  {getDateHour(\n                                    Flight.Departure.ScheduledTimeLocal.DateTime\n                                  )}\n                                </td>\n                                <td>\n                                  {getDateHour(\n                                    Flight.Arrival.ScheduledTimeLocal.DateTime\n                                  )}\n                                </td>\n                              </tr>\n                            );\n                          } else {\n                            return (\n                              <tr>\n                                <td>\n                                  {Flight.MarketingCarrier.AirlineID}{\" \"}\n                                  {Flight.MarketingCarrier.FlightNumber}\n                                </td>\n                                <td>\n                                  {Flight.Departure.AirportCode}-\n                                  {Flight.Arrival.AirportCode}\n                                </td>\n                                <td>\n                                  {getDateHour(\n                                    Flight.Departure.ScheduledTimeLocal.DateTime\n                                  )}\n                                </td>\n                                <td>\n                                  {getDateHour(\n                                    Flight.Arrival.ScheduledTimeLocal.DateTime\n                                  )}\n                                </td>\n                              </tr>\n                            );\n                          }\n                        });\n                      } else {\n                        return (\n                          <tr>\n                            <td>\n                              {getDuration(Flight.TotalJourney.Duration)}{\" \"}\n                              Non-stop\n                            </td>\n                            <td>\n                              {Flight.Flight.MarketingCarrier.AirlineID}{\" \"}\n                              {Flight.Flight.MarketingCarrier.FlightNumber}\n                            </td>\n                            <td>\n                              {Flight.Flight.Departure.AirportCode}-\n                              {Flight.Flight.Arrival.AirportCode}\n                            </td>\n                            <td>\n                              {getDateHour(\n                                Flight.Flight.Departure.ScheduledTimeLocal\n                                  .DateTime\n                              )}\n                            </td>\n                            <td>\n                              {getDateHour(\n                                Flight.Flight.Arrival.ScheduledTimeLocal\n                                  .DateTime\n                              )}\n                            </td>\n                          </tr>\n                        );\n                      }\n                    })}\n                  </tbody>\n                </Table>\n              </Tab>\n            )}\n\n            <br />\n\n            {props.outboundFlights.length > 0 && (\n              <Tab eventKey=\"outbound\" title=\"Return Flights\" className=\"nav-tabs\">\n                <Table\n                  striped\n                  bordered\n                  hover\n                  variant=\"light\"\n                  id=\"outboundTable\"\n                  className=\"largeTable\"\n                >\n                  <thead>\n                    <tr>\n                      <th>Duration</th>\n                      <th>Flight</th>\n                      <th>Airports</th>\n                      <th>Dep</th>\n                      <th>Arr</th>\n                    </tr>\n                  </thead>\n\n                  <tbody>\n                    {props.outboundFlights.map(Flight => {\n                      if (Array.isArray(Flight.Flight)) {\n                        const stopsNumber = Flight.Flight.length - 1;\n                        const duration = getDuration(\n                          Flight.TotalJourney.Duration\n                        );\n                        return Flight.Flight.map((Flight, index) => {\n                          if (index === 0) {\n                            return (\n                              <tr>\n                                <td rowSpan={stopsNumber + 1}>\n                                  {duration} <br />\n                                  {stopsNumber}\n                                  {stopsNumber > 1 ? \" Stops\" : \" Stop\"}\n                                </td>\n                                <td>\n                                  {Flight.MarketingCarrier.AirlineID}{\" \"}\n                                  {Flight.MarketingCarrier.FlightNumber}\n                                </td>\n                                <td>\n                                  {Flight.Departure.AirportCode}-\n                                  {Flight.Arrival.AirportCode}\n                                </td>\n                                <td>\n                                  {getDateHour(\n                                    Flight.Departure.ScheduledTimeLocal.DateTime\n                                  )}\n                                </td>\n                                <td>\n                                  {getDateHour(\n                                    Flight.Arrival.ScheduledTimeLocal.DateTime\n                                  )}\n                                </td>\n                              </tr>\n                            );\n                          } else {\n                            return (\n                              <tr>\n                                <td>\n                                  {Flight.MarketingCarrier.AirlineID}{\" \"}\n                                  {Flight.MarketingCarrier.FlightNumber}\n                                </td>\n                                <td>\n                                  {Flight.Departure.AirportCode}-\n                                  {Flight.Arrival.AirportCode}\n                                </td>\n                                <td>\n                                  {getDateHour(\n                                    Flight.Departure.ScheduledTimeLocal.DateTime\n                                  )}\n                                </td>\n                                <td>\n                                  {getDateHour(\n                                    Flight.Arrival.ScheduledTimeLocal.DateTime\n                                  )}\n                                </td>\n                              </tr>\n                            );\n                          }\n                        });\n                      } else {\n                        return (\n                          <tr>\n                            <td>\n                              {getDuration(Flight.TotalJourney.Duration)}{\" \"}\n                              Non-stop\n                            </td>\n                            <td>\n                              {Flight.Flight.MarketingCarrier.AirlineID}{\" \"}\n                              {Flight.Flight.MarketingCarrier.FlightNumber}\n                            </td>\n                            <td>\n                              {Flight.Flight.Departure.AirportCode}-\n                              {Flight.Flight.Arrival.AirportCode}\n                            </td>\n                            <td>\n                              {getDateHour(\n                                Flight.Flight.Departure.ScheduledTimeLocal\n                                  .DateTime\n                              )}\n                            </td>\n                            <td>\n                              {getDateHour(\n                                Flight.Flight.Arrival.ScheduledTimeLocal\n                                  .DateTime\n                              )}\n                            </td>\n                          </tr>\n                        );\n                      }\n                    })}\n                  </tbody>\n                </Table>\n              </Tab>\n            )}\n          </Tabs>\n        </div>\n      </center>\n    </div>\n  );\n};\n\nexport default FlightsList;\n","import React, { Component } from \"react\";\nimport Hero from \"../components/hero/hero\";\nimport FlightsForm from \"../components/Flights/FlightsForm\";\nimport FlightsList from \"../components/Flights/FlightsList\";\n\nexport default class Flights extends Component {\n  state = {\n    flightsDataInbound: [],\n    flightsDataOutbound: []\n  };\n\n  refreshflightsList = (\n    flightsDataInbound,\n    flightsDataOutbound\n  ) => {\n    this.setState({\n      flightsDataInbound: flightsDataInbound,\n      flightsDataOutbound: flightsDataOutbound\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <center>\n          <Hero\n            videosrc=\"https://pixabay.com/videos/download/video-10816_medium.mp4\"\n            h1=\"Flights\"\n            h2=\"First, Business or Economy. Fly your way\"\n          />\n          <FlightsForm refreshflightsList={this.refreshflightsList} />\n          <FlightsList\n            inboundFlights={this.state.flightsDataInbound}\n            outboundFlights={this.state.flightsDataOutbound}\n          />\n        </center>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Form, Button, Col, Row, Container } from \"react-bootstrap\";\nimport { getHotels } from \"../../services/Api\";\nimport { trackPromise } from \"react-promise-tracker\";\nimport {\n  getToday,\n  getFormDate,\n  getDateApi,\n  getDatePlus\n} from \"../../services/DateTimeFormating\";\n\nexport default class HotelsForm extends Component {\n  state = {\n    flightTo: \"\",\n    dateFlightFrom: getToday(0),\n    dateFlightTo: getToday(1),\n    hotelsData: [],\n    error: \"\"\n  };\n\n  handleChange = event => {\n    const { name, value } = event.target;\n\n    this.setState({\n      [name]: value\n    });\n  };\n\n  handleDateFlightFromChange = event => {\n    let newDateFrom = new Date(event.target.value);\n    let newDateTo = new Date(this.state.dateFlightTo);\n\n    if (newDateFrom >= newDateTo) {\n      this.setState({\n        dateFlightFrom: newDateFrom,\n        dateFlightTo: getDatePlus(newDateFrom, 1)\n      });\n    } else {\n      this.setState({\n        dateFlightFrom: newDateFrom\n      });\n    }\n  };\n\n  handleDateFlightToChange = event => {\n    let newDateFrom = new Date(this.state.dateFlightFrom);\n    let newDateTo = new Date(event.target.value);\n    if (newDateFrom >= newDateTo) {\n      this.setState({\n        dateFlightFrom: getDatePlus(newDateTo, -1),\n        dateFlightTo: newDateTo\n      });\n    } else {\n      this.setState({\n        dateFlightTo: newDateTo\n      });\n    }\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n\n    const { flightTo, dateFlightFrom, dateFlightTo } = this.state;\n\n    trackPromise(\n      getHotels(\n        flightTo,\n        getDateApi(dateFlightFrom),\n        getDateApi(dateFlightTo)\n      ).then(response => {\n        this.props.refreshHotelsList(response);\n        this.setState({\n          hotelsData: response.hotelsData\n        });\n      })\n    ).catch(err => {\n      console.log(err);\n    });\n  };\n\n  render() {\n    return (\n      <div align=\"center\">\n        <Container>\n          <Row>\n            <Col lg={true}>\n              <Form onSubmit={this.handleSubmit} style={{ width: \"95%\" }}>\n                <Form.Row>\n                  <Col lg=\"4\">\n                    <Form.Label htmlFor=\"flightTo\">\n                      <h5>Hotel Location</h5>\n                    </Form.Label>\n\n                    <Form.Control\n                      type=\"text\"\n                      onChange={this.handleChange}\n                      id=\"flightTo\"\n                      name=\"flightTo\"\n                      value={this.state.flightTo || \"\"}\n                      placeholder=\"Destination airport IATA Code\"\n                      required\n                    />\n                  </Col>\n\n                  <Col lg=\"4\">\n                    <Form.Label htmlFor=\"dateFlightFrom\">\n                      <h5>Date From</h5>\n                    </Form.Label>\n\n                    <Form.Control\n                      type=\"date\"\n                      onChange={this.handleDateFlightFromChange}\n                      id=\"dateFlightFrom\"\n                      name=\"dateFlightFrom\"\n                      value={getFormDate(this.state.dateFlightFrom)}\n                      min={getFormDate(getToday(0))}\n                      required\n                    />\n                  </Col>\n\n                  <Col lg=\"4\">\n                    <Form.Label htmlFor=\"dateFlightTo\">\n                      <h5>Date To</h5>\n                    </Form.Label>\n\n                    <Form.Control\n                      type=\"date\"\n                      onChange={this.handleDateFlightToChange}\n                      id=\"dateFlightTo\"\n                      name=\"dateFlightTo\"\n                      value={getFormDate(this.state.dateFlightTo)}\n                      min={getFormDate(getToday(1))}\n                    />\n                  </Col>\n                </Form.Row>\n                <Form.Row>\n                  <Col>\n                    <br />\n                    <Button type=\"submit\" size=\"lg\">Hotel Search</Button>\n                  </Col>\n                </Form.Row>\n              </Form>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Container,\n  Row,\n  Card,\n  Tabs,\n  Tab,\n  Carousel,\n  Col\n} from \"react-bootstrap\";\nimport { getHotelDetails } from \"../../services/Api\";\nimport { trackPromise } from \"react-promise-tracker\";\nimport ReactMapGL, { Marker } from \"react-map-gl\";\nimport { Icon } from \"react-icons-kit\";\nimport { home } from \"react-icons-kit/icomoon/home\";\n\nexport default class HotelsList extends Component {\n  state = {\n    hotelDetails: {},\n    width: 400,\n    height: 400,\n    zoom: 12\n  };\n\n  getHotelDetails = hotelId => {\n    trackPromise(\n      getHotelDetails(hotelId)\n        .then(response => {\n          this.setState({\n            hotelDetails: response\n          });\n          this.props.refreshHotelDetails(hotelId);\n        })\n        .catch(err => {\n          console.log(err);\n        })\n    );\n  };\n\n  render() {\n    return (\n      <div\n        style={{\n          position: \"absolute\",\n          zIndex: 1,\n          width: \"100%\",\n          align: \"center\"\n        }}\n      >\n        <br />\n        <center>\n          <div className=\"lightDiv95\">\n            <Tabs defaultActiveKey=\"hotelsList\">\n              <br />\n              {this.props.hotelsData.length > 0 && (\n                <Tab eventKey=\"hotelsList\" title=\"Hotels\">\n                  <div className=\"lightDiv100\">\n                    <br />\n                    <Container style={{ textAlignment: \"center\" }}>\n                      <Row className=\"row justify-content-center\">\n                        {this.props.hotelsData.map(Hotel => {\n                          return (\n                            <Card className=\"col-xl-3 col-lg-3 col-md-12 col-sm-12 col-sm-12 hotelCard border-0\">\n                              <Link\n                                onClick={this.getHotelDetails.bind(\n                                  this,\n                                  Hotel.code\n                                )}\n                              >\n                                <Card.Img\n                                  variant=\"top\"\n                                  src={`http://photos.hotelbeds.com/giata/bigger/${\n                                    Hotel.images[0].path\n                                  }`}\n                                  class=\"card-img-top\"\n                                />\n                              </Link>\n                              <Card.Body>\n                                <Card.Title>\n                                  <Link\n                                    onClick={this.getHotelDetails.bind(\n                                      this,\n                                      Hotel.code\n                                    )}\n                                  >\n                                    {Hotel.name.content.toUpperCase()}\n                                  </Link>\n                                  <br />\n                                  <img\n                                    src={`http://cdn4.hotelopia.com/freya/img/stars/${\n                                      Hotel.categoryCode\n                                    }.gif`}\n                                    alt=\"Hotel Stars\"\n                                  />\n                                </Card.Title>\n                                <Card.Text>\n                                  <p class=\"block-with-text\">\n                                    {Hotel.description.content}\n                                  </p>\n                                </Card.Text>\n                              </Card.Body>\n                            </Card>\n                          );\n                        })}\n                      </Row>\n                    </Container>\n                  </div>\n                </Tab>\n              )}\n              {Object.getOwnPropertyNames(this.state.hotelDetails).length >\n                0 && (\n                <Tab\n                  eventKey=\"hotelDetails\"\n                  title={this.state.hotelDetails.hotel.name.content}\n                >\n                  <div className=\"lightDiv100\" style={{padding: \"25px\"}}>\n                    <Row>\n                      <Col className=\"col-xl-12 text-left\">\n                        <h2>\n                          {this.state.hotelDetails.hotel.name.content}\n                          <img\n                            src={`http://cdn4.hotelopia.com/freya/img/stars/${\n                              this.state.hotelDetails.hotel.category.code\n                            }.gif`}\n                            alt=\"Hotel Stars\"\n                          />\n                        </h2>\n                      </Col>\n                    </Row>\n                    <Row>\n                      <Col className=\"col-xl-6 col-lg-6 col-md-6 col-sm-12 col-sm-12 text-left\">\n                        <h5>Description</h5>\n                        <p>\n                          {this.state.hotelDetails.hotel.description.content}\n                        </p>\n\n                        <h5>Location</h5>\n                        <p>\n                          {this.state.hotelDetails.hotel.address.content}{\" \"}\n                          {this.state.hotelDetails.hotel.postalCode}{\" \"}\n                          {this.state.hotelDetails.hotel.city.content}{\" \"}\n                          {\n                            this.state.hotelDetails.hotel.country.description\n                              .content\n                          }\n                        </p>\n                        <ReactMapGL\n                          latitude={\n                            this.state.hotelDetails.hotel.coordinates.latitude\n                          }\n                          longitude={\n                            this.state.hotelDetails.hotel.coordinates.longitude\n                          }\n                          width={this.state.width}\n                          height={this.state.height}\n                          zoom={this.state.zoom}\n                        >\n                          <Marker\n                            latitude={\n                              this.state.hotelDetails.hotel.coordinates.latitude\n                            }\n                            longitude={\n                              this.state.hotelDetails.hotel.coordinates\n                                .longitude\n                            }\n                          >\n                            <Icon icon={home} />\n                            <h5>\n                              {this.state.hotelDetails.hotel.name.content}\n                            </h5>\n                          </Marker>\n                        </ReactMapGL>\n                      </Col>\n                      <Col className=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 col-sm-12\">\n                        <h5>Photos</h5>\n                        <center>\n                          <Carousel className=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-sm-12\">\n                            {this.state.hotelDetails.hotel.images.map(image => {\n                              return (\n                                <Carousel.Item>\n                                  <img\n                                    className=\"d-block w-100\"\n                                    src={`http://photos.hotelbeds.com/giata/bigger/${\n                                      image.path\n                                    }`}\n                                    alt=\" \"\n                                  />\n                                </Carousel.Item>\n                              );\n                            })}\n                          </Carousel>\n                        </center>\n                      </Col>\n                    </Row>\n                  </div>\n                </Tab>\n              )}\n            </Tabs>\n          </div>\n        </center>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Hero from \"../components/hero/hero\";\nimport HotelsForm from \"../components/Hotels/HotelsForm\";\nimport HotelsList from \"../components/Hotels/HotelsList\";\n\nexport default class Hotels extends Component {\n  state = {\n    hotelsData: [],\n    hotelId: 0\n  };\n\n  refreshHotelsList = response => {\n    this.setState({\n      hotelsData: response.hotelsData,\n    });\n  };\n\n  refreshHotelDetails = response => {\n    this.setState({\n      hotelId: response\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <center>\n        <Hero\n          videosrc=\"https://pixabay.com/videos/download/video-10816_medium.mp4\"\n          h1=\"Hotels\"\n          h2=\"Whether luxurious, comfortable or just exciting. You choose\"\n        />\n\n        <HotelsForm refreshHotelsList={this.refreshHotelsList} />\n        <HotelsList hotelsData={this.state.hotelsData} refreshHotelDetails={this.refreshHotelDetails}/>\n        </center>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { getHotelDetails } from \"../services/Api\";\nimport { Col, Row } from \"react-bootstrap\";\nimport Carousel from \"react-bootstrap/Carousel\";\nimport Hero from \"../components/hero/hero\";\nimport ReactMapGL, { Marker } from \"react-map-gl\";\nimport { Icon } from \"react-icons-kit\";\nimport { home } from \"react-icons-kit/icomoon/home\";\n\nexport default class HotelDetails extends Component {\n  state = {\n    hotelDetails: [],\n    width: 400,\n    height: 400,\n    zoom: 12\n  };\n\n  getHotelData = () => {\n    const hotelId = this.props.match.params.id;\n\n    return getHotelDetails(hotelId)\n      .then(response => {\n        this.setState({\n          hotelDetails: response\n        });\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  componentDidMount() {\n    this.getHotelData();\n  }\n\n  render() {\n    return (\n      <div align=\"center\" style={{ width: \"100%\" }}>\n        <Hero videosrc=\"https://pixabay.com/videos/download/video-24216_medium.mp4\" />\n\n        {Object.entries(this.state.hotelDetails).length > 0 && (\n          <div\n            style={{\n              width: \"95%\",\n              backgroundColor: \"white\",\n              padding: \"10px\",\n              textAlign: \"left\"\n            }}\n          >\n            <Row>\n              <Col className=\"col-xl-12\">\n\n                <h2>\n                  {this.state.hotelDetails.hotel.name.content}\n                  <img\n                    src={`http://cdn4.hotelopia.com/freya/img/stars/${\n                      this.state.hotelDetails.hotel.category.code\n                    }.gif`}\n                    alt=\"Hotel Stars\"\n                  />\n                </h2>\n              </Col>\n            </Row>\n            <Row>\n              <Col className=\"col-xl-6 col-lg-6 col-md-6 col-sm-12 col-sm-12\">\n                <h5>Description</h5>\n                <p>{this.state.hotelDetails.hotel.description.content}</p>\n\n                <h5>Location</h5>\n                <p>\n                  {this.state.hotelDetails.hotel.address.content}{\" \"}\n                  {this.state.hotelDetails.hotel.postalCode}{\" \"}\n                  {this.state.hotelDetails.hotel.city.content}{\" \"}\n                  {this.state.hotelDetails.hotel.country.description.content}\n                </p>\n                <ReactMapGL\n                  latitude={this.state.hotelDetails.hotel.coordinates.latitude}\n                  longitude={\n                    this.state.hotelDetails.hotel.coordinates.longitude\n                  }\n                  width={this.state.width}\n                  height={this.state.height}\n                  zoom={this.state.zoom}\n                >\n                  <Marker\n                    latitude={\n                      this.state.hotelDetails.hotel.coordinates.latitude\n                    }\n                    longitude={\n                      this.state.hotelDetails.hotel.coordinates.longitude\n                    }\n                  >\n                    <Icon icon={home} />\n                    <h5>{this.state.hotelDetails.hotel.name.content}</h5>\n                  </Marker>\n                </ReactMapGL>\n              </Col>\n              <Col className=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 col-sm-12\">\n                <h5>Photos</h5>\n                <center>\n                  <Carousel className=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-sm-12\">\n                    {this.state.hotelDetails.hotel.images.map(image => {\n                      return (\n                        <Carousel.Item>\n                          <img\n                            className=\"d-block w-100\"\n                            src={`http://photos.hotelbeds.com/giata/bigger/${\n                              image.path\n                            }`}\n                            alt=\" \"\n                          />\n                        </Carousel.Item>\n                      );\n                    })}\n                  </Carousel>\n                </center>\n              </Col>\n            </Row>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Form, Button, Col, Row, Container } from \"react-bootstrap\";\nimport { getActivities } from \"../../services/Api\";\nimport { trackPromise } from \"react-promise-tracker\";\nimport {\n  getToday,\n  getFormDate,\n  getDateApi,\n  getDatePlus\n} from \"../../services/DateTimeFormating\";\n\nexport default class ActivitiesForm extends Component {\n  state = {\n    flightTo: \"\",\n    dateFlightFrom: getToday(0),\n    dateFlightTo: getToday(1),\n    activitiesData: []\n  };\n\n  handleChange = event => {\n    const { name, value } = event.target;\n\n    this.setState({\n      [name]: value\n    });\n  };\n\n  handleDateFlightFromChange = event => {\n    let newDateFrom = new Date(event.target.value);\n    let newDateTo = new Date(this.state.dateFlightTo);\n\n    if (newDateFrom >= newDateTo) {\n      this.setState({\n        dateFlightFrom: newDateFrom,\n        dateFlightTo: getDatePlus(newDateFrom, 0)\n      });\n    } else {\n      this.setState({\n        dateFlightFrom: newDateFrom\n      });\n    }\n  };\n\n  handleDateFlightToChange = event => {\n    let newDateFrom = new Date(this.state.dateFlightFrom);\n    let newDateTo = new Date(event.target.value);\n    if (newDateFrom >= newDateTo) {\n      this.setState({\n        dateFlightFrom: getDatePlus(newDateTo, 0),\n        dateFlightTo: newDateTo\n      });\n    } else {\n      this.setState({\n        dateFlightTo: newDateTo\n      });\n    }\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n\n    const { flightTo, dateFlightFrom, dateFlightTo } = this.state;\n\n    trackPromise(\n      getActivities(\n        flightTo,\n        getDateApi(dateFlightFrom),\n        getDateApi(dateFlightTo)\n      ).then(response => {\n        console.log(response.activitiesList.activities);\n        this.props.refreshActivitiesList(response.activitiesList.activities);\n        this.setState({\n          activitiesData: response.activitiesList.activities\n        });\n      })\n    ).catch(err => {\n      console.log(err);\n    });\n  };\n\n  render() {\n    return (\n      <div align=\"center\">\n        <Container>\n          <Row>\n            <Col lg={true}>\n              <Form onSubmit={this.handleSubmit} style={{ width: \"95%\" }}>\n                <Form.Row>\n                  <Col lg=\"4\">\n                    <Form.Label htmlFor=\"flightTo\">\n                      <h5>\n                        Activity Location\n                      </h5>\n                    </Form.Label>\n                    <Form.Control\n                      type=\"text\"\n                      onChange={this.handleChange}\n                      id=\"flightTo\"\n                      name=\"flightTo\"\n                      value={this.state.flightTo || \"\"}\n                      placeholder=\"Destination airport IATA Code\"\n                      required\n                    />\n                  </Col>\n\n                  <Col lg=\"4\">\n                    <Form.Label htmlFor=\"dateFlightFrom\">\n                    <h5>\n                        Date From\n                      </h5>\n                    </Form.Label>\n                    <Form.Control\n                      type=\"date\"\n                      onChange={this.handleDateFlightFromChange}\n                      id=\"dateFlightFrom\"\n                      name=\"dateFlightFrom\"\n                      value={getFormDate(this.state.dateFlightFrom)}\n                      min={getFormDate(getToday(0))}\n                      required\n                    />\n                  </Col>\n\n                  <Col lg=\"4\">\n                    <Form.Label htmlFor=\"dateFlightTo\">\n                    <h5>\n                        Date To\n                      </h5>\n                    </Form.Label>\n\n                    <Form.Control\n                      type=\"date\"\n                      onChange={this.handleDateFlightToChange}\n                      id=\"dateFlightTo\"\n                      name=\"dateFlightTo\"\n                      value={getFormDate(this.state.dateFlightTo)}\n                      min={getFormDate(getToday(1))}\n                      required\n                    />\n                  </Col>\n                </Form.Row>\n                <Form.Row>\n                  <Col>\n                    <br />\n                    <Button type=\"submit\" size=\"lg\">Activities Search</Button>\n                  </Col>\n                </Form.Row>\n              </Form>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Container, Row, Card, Tabs, Tab } from \"react-bootstrap\";\nimport { getActivityDetails } from \"../../services/Api\";\nimport { trackPromise } from \"react-promise-tracker\";\n\nexport default class ActivitiesList extends Component {\n  state = {\n    activityDetails: {}\n  };\n\n  getActivityDetails = activityId => {\n    trackPromise(\n      getActivityDetails(activityId)\n        .then(response => {\n          this.setState({\n            activityDetails: response\n          });\n          this.props.refreshActivityDetails(activityId);\n        })\n        .catch(err => {\n          console.log(err);\n        })\n    );\n  };\n\n  render() {\n    return (\n      <div\n        style={{\n          position: \"absolute\",\n          zIndex: 1,\n          width: \"100%\",\n          align: \"center\"\n        }}\n      >\n        <br />\n        <center>\n          <div className=\"lightDiv95\">\n            <Tabs defaultActiveKey=\"activitiesList\">\n              <br />\n              {this.props.activitiesData.length > 0 && (\n                <Tab\n                  eventKey=\"activitiesList\"\n                  title=\"Activities\"\n                  className=\"custom-nav-bg\"\n                >\n                  <div className=\"lightDiv100\">\n                    <br />\n                    <Container style={{ align: \"center\" }}>\n                      <Row className=\"row justify-content-center\">\n                        {this.props.activitiesData.map(activity => {\n                          return (\n                            <Card className=\"col-xl-3 col-lg-3 col-md-12 col-sm-12 col-sm-12 hotelCard border-0\">\n                              <Link\n                                onClick={this.getActivityDetails.bind(\n                                  this,\n                                  activity.code\n                                )}\n                              >\n                                <Card.Img\n                                  variant=\"top\"\n                                  src={`${\n                                    activity.content.media.images[0].urls[1]\n                                      .resource\n                                  }`}\n                                  class=\"card-img-top\"\n                                />\n                              </Link>\n                              <Card.Body>\n                                <Card.Title>\n                                  <Link\n                                    onClick={this.getActivityDetails.bind(\n                                      this,\n                                      activity.code\n                                    )}\n                                  >\n                                    {activity.content.name.toUpperCase()}\n                                  </Link>\n                                </Card.Title>\n                                <Card.Text>\n                                  <p\n                                    class=\"block-with-text\"\n                                    dangerouslySetInnerHTML={{\n                                      __html: activity.content.description\n                                    }}\n                                  />\n                                </Card.Text>\n                              </Card.Body>\n                            </Card>\n                          );\n                        })}\n                      </Row>\n                    </Container>\n                  </div>\n                </Tab>\n              )}\n              {Object.getOwnPropertyNames(this.state.activityDetails).length >\n                0 && (\n                <Tab\n                  eventKey=\"activityDetails\"\n                  title={this.state.activityDetails.name}\n                >\n                  <div className=\"lightDiv100\" style={{ padding: \"25px\" }}>\n                    <h2>{this.state.activityDetails.name}</h2>\n\n                    <div\n                      dangerouslySetInnerHTML={{\n                        __html: this.state.activityDetails.description\n                      }}\n                      align=\"left\"\n                    />\n                  </div>\n                </Tab>\n              )}\n            </Tabs>\n          </div>\n        </center>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Hero from \"../components/hero/hero\";\nimport ActivitiesForm from \"../components/Activities/ActivitiesForm\";\nimport ActivitiesList from \"../components/Activities/ActivitiesList\";\n\nexport default class Activities extends Component {\n  state = {\n    activitiesData: [],\n    activityId: 0\n  };\n\n  refreshActivitiesList = response => {\n    this.setState({\n      activitiesData: response\n    });\n  };\n\n  refreshActivityDetails = response => {\n    this.setState({\n      activityId: response\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <center>\n          <Hero\n            videosrc=\"https://pixabay.com/videos/download/video-10816_medium.mp4\"\n            h1=\"Activities\"\n            h2=\"Guide yourself through the most exciting experiences\"\n          />\n\n          <ActivitiesForm refreshActivitiesList={this.refreshActivitiesList} />\n          <ActivitiesList activitiesData={this.state.activitiesData} refreshActivityDetails={this.refreshActivityDetails}/>\n        </center>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { getActivityDetails } from \"../services/Api\";\nimport Hero from \"../components/hero/hero\";\n\nexport default class ActivityDetails extends Component {\n  state = {\n    activityDetails: {}\n  };\n\n  getActivityData = () => {\n    const activityId = this.props.match.params.id;\n\n    return getActivityDetails(activityId)\n      .then(response => {\n        this.setState({\n          activityDetails: response\n        });\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  componentDidMount() {\n    this.getActivityData();\n  }\n\n  render() {\n    return (\n      <div align=\"center\" style={{ width: \"100%\" }}>\n        <Hero videosrc=\"https://pixabay.com/videos/download/video-10816_medium.mp4\" />\n\n        <div style={{ width: \"95%\",backgroundColor: \"white\", padding:\"10px\",textAlign: \"left\" }}>\n        <h2>{this.state.activityDetails.name}</h2>\n\n        <div\n          dangerouslySetInnerHTML={{\n            __html: this.state.activityDetails.description\n          }}\n          align=\"left\"\n        />\n      </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport \"./App.css\";\nimport Navbar from \"./components/Navbar\";\nimport { Switch, Route } from \"react-router-dom\";\nimport Home from \"./containers/Home\";\nimport Flights from \"./containers/Flights\";\nimport Hotels from \"./containers/Hotels\";\nimport HotelDetails from \"./containers/HotelDetails\";\nimport Activities from \"./containers/Activities\";\nimport ActivityDetails from \"./containers/ActivityDetails\";\nimport \"mapbox-gl/dist/mapbox-gl.css\";\n\nfunction App() {\n  return (\n    <>\n      <Navbar />\n\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route exact path=\"/Flights\" component={Flights} />\n        <Route exact path=\"/Hotels\" component={Hotels} />\n        <Route exact path=\"/Hotels/:id\" component={HotelDetails} />\n        <Route exact path=\"/Activities\" component={Activities} />\n        <Route exact path=\"/Activities/:id\" component={ActivityDetails} />\n      </Switch>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { usePromiseTracker } from \"react-promise-tracker\";\nimport Loader from \"react-loader-spinner\";\n\nconst LoadingIndicator = props => {\n  const { promiseInProgress } = usePromiseTracker();\n\n  return (\n    promiseInProgress && (\n      <div\n        style={{\n          position: \"absolute\",\n          zIndex: 2147483647,\n          width: \"100%\",\n          height: \"100\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\"\n        }}\n      >\n        <Loader type=\"Plane\" color=\"#0275d8\" height=\"100\" width=\"100\" />\n      </div>\n    )\n  );\n};\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n    <LoadingIndicator />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}