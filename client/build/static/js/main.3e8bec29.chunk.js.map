{"version":3,"sources":["components/Navbar.js","components/hero/hero.js","services/Api.js","services/DateTimeFormating.js","components/Home/HomeForm.js","components/Home/HomeList.js","containers/Home.js","components/Flights/FlightsForm.js","components/Flights/FlightsList.js","containers/Flights.js","components/Hotels/HotelsForm.js","components/Hotels/HotelsList.js","containers/Hotels.js","containers/HotelDetails.js","components/Activities/ActivitiesForm.js","components/Activities/ActivitiesList.js","containers/Activities.js","containers/ActivityDetails.js","App.js","serviceWorker.js","index.js"],"names":["CustomNavbar","react_default","a","createElement","Navbar","className","variant","Brand","href","Nav","Link","Hero","dist_default","src","this","props","videosrc","h1","h2","Component","getFlights","flightFrom","flightTo","dateFlightFrom","dateFlightTo","axios","post","then","response","console","log","data","getHotels","getHotelDetails","hotelId","get","concat","getActivities","getActivityDetails","activityId","getAll","getDuration","duration","replace","getDateHour","date","newDate","Date","year","getFullYear","month","getMonth","dt","getDate","hour","getHours","minutes","getMinutes","getDateApi","getToday","num","setHours","setDate","getDatePlus","getFormDate","HomeForm","state","flightsDataInbound","flightsDataOutbound","nonStopOnly","handleChange","event","_event$target","target","name","value","_this","setState","Object","defineProperty","handleNonStop","handleDateFlightFromChange","newDateFrom","handleDateFlightToChange","newDateTo","handleSubmit","preventDefault","_this$state","trackPromise","refreshflightsList","hotelDetails","activitiesDetails","catch","err","align","Form","onSubmit","style","width","Row","Col","Label","htmlFor","Control","type","onChange","id","placeholder","required","min","Alert","Check","inline","label","onClick","Button","HomeList","position","zIndex","inboundFlights","length","Table","striped","bordered","hover","colSpan","class","map","Flight","Array","isArray","stopsNumber","TotalJourney","Duration","index","rowSpan","MarketingCarrier","AirlineID","FlightNumber","Departure","AirportCode","Arrival","ScheduledTimeLocal","DateTime","outboundFlights","Home","hero_hero","HomeForm_HomeForm","refreshHotelsList","Home_HomeList","FlightsForm","FlightsList","color","Tabs","defaultActiveKey","Tab","eventKey","title","Flights","FlightsForm_FlightsForm","Flights_FlightsList","HotelsForm","hotelsData","error","Container","lg","size","HotelsList","textAlignment","Hotel","Card","margin","react_router_dom","to","code","Img","images","path","Body","Title","content","toUpperCase","categoryCode","alt","Text","description","Footer","Hotels","HotelsForm_HotelsForm","Hotels_HotelsList","HotelDetails","viewport","height","zoom","getHotelData","match","params","viewportlatitude","hotel","coordinates","latitude","longitude","_this2","entries","backgroundColor","padding","textAlign","category","address","postalCode","city","country","esm","assign","onViewportChange","Carousel_default","image","Item","ActivitiesForm","activitiesData","activitiesList","activities","refreshActivitiesList","ActivitiesList","activity","media","urls","resource","dangerouslySetInnerHTML","__html","Activities","ActivitiesForm_ActivitiesForm","Activities_ActivitiesList","ActivityDetails","activityDetails","getActivityData","App","Fragment","components_Navbar","react_router","exact","component","Boolean","window","location","hostname","ReactDOM","render","src_App","usePromiseTracker","promiseInProgress","display","justifyContent","alignItems","react_loader_spinner_default","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3e8bec29.chunk.js","sourcesContent":["import React from \"react\";\nimport { Navbar, Nav } from \"react-bootstrap\";\n\nconst CustomNavbar = () => {\n  return (\n    <Navbar className=\"nav fixed-top\" variant=\"dark\">\n      <Navbar.Brand href=\"/\">myTravelApp</Navbar.Brand>\n      <Nav.Link href=\"/Flights\" className=\"navLink\">\n        Flights\n      </Nav.Link>\n      <Nav.Link href=\"/Hotels\" className=\"navLink\">\n        Hotels\n      </Nav.Link>\n      <Nav.Link href=\"/Activities\" className=\"navLink\">\n        Activities\n      </Nav.Link>\n    </Navbar>\n  );\n};\n\nexport default CustomNavbar;\n","import React, { Component } from 'react'\nimport \"./hero.css\"\n\nimport BackgroundVideo from 'react-background-video-player';\n\nclass Hero extends Component {\n\n\n\n  render() {\n    return (\n      <div className=\"hero\">\n        <BackgroundVideo\n        src={this.props.videosrc}\n        />\n        <div className=\"hero-text\">\n          <h1>{this.props.h1}</h1>\n          <h2>{this.props.h2}</h2>\n        </div>\n      </div>\n          )\n        }\n      }\n\n      export default Hero;","import axios from \"axios\";\n\n\nconst getFlights = (flightFrom, flightTo, dateFlightFrom, dateFlightTo) => (\n  axios\n    .post(\"/api/Flights\", {\n      flightFrom: flightFrom,\n      flightTo: flightTo,\n      dateFlightFrom: dateFlightFrom,\n      dateFlightTo: dateFlightTo\n    })\n    .then(response => {\n      console.log(response.data);\n      return response.data;\n    })\n) \n\nconst getHotels = (flightTo, dateFlightFrom, dateFlightTo) => (\n  axios\n  .post(\"/api/Hotels\", {\n    flightTo: flightTo,\n    dateFlightFrom: dateFlightFrom,\n    dateFlightTo: dateFlightTo\n  })\n  .then(response => {\n    console.log(response.data);\n    return response.data;\n  })\n)\n\nconst getHotelDetails = (hotelId) => (\n  axios\n  .get(`/api/Hotels/search/${hotelId}`)\n  .then(response => {\n    return response.data;\n  })\n)\n\nconst getActivities = (flightTo, dateFlightFrom, dateFlightTo) => (\n  axios\n  .post(\"/api/Activities\", {\n    flightTo: flightTo,\n    dateFlightFrom: dateFlightFrom,\n    dateFlightTo: dateFlightTo\n  })\n  .then(response => {\n    console.log(response.data);\n    return response.data;\n  })\n)\n\nconst getActivityDetails = (activityId) => (\n  axios\n  .get(`/api/Activities/search/${activityId}`)\n  .then(response => {\n    console.log(response);\n    return response.data;\n  })\n)\n\nconst getAll = (flightFrom, flightTo, dateFlightFrom, dateFlightTo) => (\n  axios\n    .post(\"/api/All\", {\n      flightFrom: flightFrom,\n      flightTo: flightTo,\n      dateFlightFrom: dateFlightFrom,\n      dateFlightTo: dateFlightTo\n    })\n    .then(response => {\n      console.log(response.data);\n      return response.data;\n    })\n) \n\nexport { getFlights,getHotels, getHotelDetails, getActivities, getActivityDetails, getAll };\n","const getDuration = duration => {\n  // Transforms format of durations strings like P1DT5H35M into 1D 5H 35m\n  // Using regular expressions for formating\n\n  duration = duration.replace(/P/, \"\");\n  duration = duration.replace(/T/, \"\");\n  duration = duration.replace(/D/, \"D \");\n  duration = duration.replace(/H/, \"H \");\n  duration = duration.replace(/M/, \"m\");\n  return duration;\n};\n\nconst getDateHour = date => {\n  // Transforms format of date hours like this 2019-07-29T06:20 into 6:20 29/07/2019\n  \n  let newDate = new Date(date);\n\n  let year = newDate.getFullYear();\n  let month = newDate.getMonth() + 1;\n  let dt = newDate.getDate();\n  let hour = newDate.getHours();\n  let minutes = newDate.getMinutes();\n\n  if (dt < 10) {\n    dt = \"0\" + dt;\n  }\n  if (month < 10) {\n    month = \"0\" + month;\n  }\n  if (minutes < 10 ) {\n    minutes = \"0\" + minutes;\n  }\n\n  return hour + \":\" + minutes + \" \"+ dt + \"/\" + month + \"/\" + year;\n};\n\n\nconst getDateApi = date => {\n  // Transforms format of date hours like this 2019-07-29T06:20 into 2019-07-29 for Api Calls\n  \n  let newDate = new Date(date);\n\n  let year = newDate.getFullYear();\n  let month = newDate.getMonth() + 1;\n  let dt = newDate.getDate();\n\n  if (dt < 10) {\n    dt = \"0\" + dt;\n  }\n  if (month < 10) {\n    month = \"0\" + month;\n  }\n\n  return year + \"-\" + month + \"-\" + dt;\n};\n\nconst getToday = (num) => {\n  // Returs date of today + num \n  \n  let newDate = new Date();\n  newDate.setHours(0,0)\n  newDate.setDate(newDate.getDate() + num)\n  return newDate;\n\n}\n\nconst getDatePlus = (date,num) => {\n  // Returs date + num \n  \n  let newDate = new Date(date);\n  newDate = newDate.setDate(newDate.getDate() + num)\n  return newDate;\n\n}\n\n\nconst getFormDate = (date) => {\n  // Returs date formated for input type date YYYY-MM-DD\n  \n  let newDate = new Date(date);\n  let year = newDate.getFullYear();\n  let month = newDate.getMonth() + 1;\n  let dt = newDate.getDate();\n\n  if (dt < 10) {\n    dt = \"0\" + dt;\n  }\n  if (month < 10) {\n    month = \"0\" + month;\n  }\n\n  return year + \"-\" + month + \"-\" + dt;\n}\n\n\nexport { getDuration, getDateHour, getDateApi, getToday, getFormDate, getDatePlus };\n","import React, { Component } from \"react\";\nimport { Alert, Form, Button, Col } from \"react-bootstrap\";\nimport { getAll } from \"../../services/Api\";\nimport { trackPromise } from \"react-promise-tracker\";\nimport {\n  getToday,\n  getFormDate,\n  getDateApi,\n  getDatePlus\n} from \"../../services/DateTimeFormating\";\n\nexport default class HomeForm extends Component {\n  state = {\n    flightFrom: \"\",\n    flightTo: \"\",\n    dateFlightFrom: getToday(1),\n    dateFlightTo: getToday(2),\n    flightsDataInbound: [],\n    flightsDataOutbound: [],\n    nonStopOnly: true\n  };\n\n  handleChange = event => {\n    const { name, value } = event.target;\n\n    this.setState({\n      [name]: value\n    });\n    console.log(name, value);\n  };\n\n  handleNonStop = event => {\n    this.setState({\n      nonStopOnly: !this.state.nonStopOnly\n    });\n    console.log(this.state.nonStopOnly);\n  };\n\n  handleDateFlightFromChange = event => {\n    let newDateFrom = new Date(event.target.value);\n    let newDateTo = new Date(this.state.dateFlightTo);\n    if (newDateFrom > newDateTo) {\n      this.setState({\n        dateFlightFrom: newDateFrom,\n        dateFlightTo: getDatePlus(newDateFrom, 1)\n      });\n    } else {\n      this.setState({\n        dateFlightFrom: newDateFrom\n      });\n    }\n  };\n\n  handleDateFlightToChange = event => {\n    let newDateFrom = new Date(this.state.dateFlightFrom);\n    let newDateTo = new Date(event.target.value);\n    if (newDateFrom > newDateTo) {\n      this.setState({\n        dateFlightFrom: getDatePlus(newDateTo, -1),\n        dateFlightTo: newDateTo\n      });\n    } else {\n      this.setState({\n        dateFlightTo: newDateTo\n      });\n    }\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n\n    const { flightFrom, flightTo, dateFlightFrom, dateFlightTo } = this.state;\n\n    trackPromise(\n      getAll(\n        flightFrom,\n        flightTo,\n        getDateApi(dateFlightFrom),\n        getDateApi(dateFlightTo)\n      ).then(response => {\n        this.props.refreshflightsList(response);\n        this.setState({\n          flightsDataInbound: response[0].data,\n          flightsDataOutbound: response[1].data,\n          hotelDetails: response[2].data,\n          activitiesDetails: response[3].data\n        });\n      })\n    ).catch(err => {\n      console.log(err);\n    });\n  };\n\n  render() {\n    return (\n      <div align=\"center\">\n        <br />\n\n        <Form onSubmit={this.handleSubmit} style={{ width: \"95%\" }}>\n          <Form.Row>\n            <Col>\n              <Form.Label htmlFor=\"flightFrom\">From</Form.Label>\n\n              <Form.Control\n                type=\"text\"\n                onChange={this.handleChange}\n                id=\"flightFrom\"\n                name=\"flightFrom\"\n                value={this.state.flightFrom || \"\"}\n                placeholder=\"Origin airport IATA Code\"\n                required\n              />\n            </Col>\n\n            <Col>\n              <Form.Label htmlFor=\"flightTo\">To</Form.Label>\n\n              <Form.Control\n                type=\"text\"\n                onChange={this.handleChange}\n                id=\"flightTo\"\n                name=\"flightTo\"\n                value={this.state.flightTo || \"\"}\n                placeholder=\"Destination airport IATA Code\"\n                required\n              />\n            </Col>\n\n            <Col>\n              <Form.Label htmlFor=\"dateFlightFrom\">Date From</Form.Label>\n\n              <Form.Control\n                type=\"date\"\n                onChange={this.handleDateFlightFromChange}\n                id=\"dateFlightFrom\"\n                name=\"dateFlightFrom\"\n                value={getFormDate(this.state.dateFlightFrom)}\n                min={getFormDate(getToday(0))}\n                required\n              />\n            </Col>\n\n            <Col>\n              <Form.Label htmlFor=\"dateFlightTo\">Date To</Form.Label>\n\n              <Form.Control\n                type=\"date\"\n                onChange={this.handleDateFlightToChange}\n                id=\"dateFlightTo\"\n                name=\"dateFlightTo\"\n                value={getFormDate(this.state.dateFlightTo)}\n                min={getFormDate(getToday(0))}\n              />\n            </Col>\n          </Form.Row>\n          <Form.Row>\n            <Col align=\"left\">\n              <br />\n              <Alert variant=\"primary\">\n                <Form.Check\n                  inline\n                  label=\"Non-stop flights only\"\n                  type=\"checkbox\"\n                  id=\"nonStopOnly\"\n                  name=\"nonStopOnly\"\n                  onClick={this.handleNonStop}\n                />\n              </Alert>\n            </Col>\n          </Form.Row>\n          <Form.Row>\n            <Col>\n              <br />\n              <Button type=\"submit\">Experience Search</Button>\n            </Col>\n          </Form.Row>\n        </Form>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { Card,Table, Alert } from \"react-bootstrap\";\nimport { getDuration, getDateHour } from \"../../services/DateTimeFormating\";\n\nconst HomeList = props => {\n  return (\n    <div align=\"center\" style={{position: \"absolute\", zIndex: 1, width: \"100%\"}}>\n      <br />\n\n      {props.inboundFlights.length > 0 && (\n        <Table\n          striped\n          bordered\n          hover\n          variant=\"dark\"\n          style={{ width: \"95%\" }}\n          id=\"inboundTable\"\n        >\n          <thead>\n            <tr>\n              <th colSpan=\"7\" class=\"bg-primary text-white\">\n                Inbound Flights\n              </th>\n            </tr>\n          </thead>\n          <thead>\n            <tr>\n              <th>Duration</th>\n              <th>Airline</th>\n              <th>Flight</th>\n              <th>Dep Airport</th>\n              <th>Arr Airport</th>\n              <th>Dep</th>\n              <th>Arr</th>\n            </tr>\n          </thead>\n\n          <tbody>\n            {props.inboundFlights.map(Flight => {\n              if (Array.isArray(Flight.Flight)) {\n                const stopsNumber = Flight.Flight.length - 1;\n                const duration = getDuration(Flight.TotalJourney.Duration);\n                return Flight.Flight.map((Flight, index) => {\n                  if (index === 0) {\n                    return (\n                      <tr>\n                        <td rowSpan={stopsNumber + 1}>\n                          {duration} <br />\n                          {stopsNumber}\n                          {stopsNumber > 1 ? \" Stops\" : \" Stop\"}\n                        </td>\n                        <td>{Flight.MarketingCarrier.AirlineID}</td>\n                        <td>{Flight.MarketingCarrier.FlightNumber}</td>\n                        <td>{Flight.Departure.AirportCode}</td>\n                        <td>{Flight.Arrival.AirportCode}</td>\n                        <td>\n                          {getDateHour(\n                            Flight.Departure.ScheduledTimeLocal.DateTime\n                          )}\n                        </td>\n                        <td>\n                          {getDateHour(\n                            Flight.Arrival.ScheduledTimeLocal.DateTime\n                          )}\n                        </td>\n                      </tr>\n                    );\n                  } else {\n                    return (\n                      <tr>\n                        <td>{Flight.MarketingCarrier.AirlineID}</td>\n                        <td>{Flight.MarketingCarrier.FlightNumber}</td>\n                        <td>{Flight.Departure.AirportCode}</td>\n                        <td>{Flight.Arrival.AirportCode}</td>\n                        <td>\n                          {getDateHour(\n                            Flight.Departure.ScheduledTimeLocal.DateTime\n                          )}\n                        </td>\n                        <td>\n                          {getDateHour(\n                            Flight.Arrival.ScheduledTimeLocal.DateTime\n                          )}\n                        </td>\n                      </tr>\n                    );\n                  }\n                });\n              } else {\n                return (\n                  <tr>\n                    <td>\n                      {getDuration(Flight.TotalJourney.Duration)}\n                      <br />\n                      Non-stop\n                    </td>\n                    <td>{Flight.Flight.MarketingCarrier.AirlineID}</td>\n                    <td>{Flight.Flight.MarketingCarrier.FlightNumber}</td>\n                    <td>{Flight.Flight.Departure.AirportCode}</td>\n                    <td>{Flight.Flight.Arrival.AirportCode}</td>\n                    <td>\n                      {getDateHour(\n                        Flight.Flight.Departure.ScheduledTimeLocal.DateTime\n                      )}\n                    </td>\n                    <td>\n                      {getDateHour(\n                        Flight.Flight.Arrival.ScheduledTimeLocal.DateTime\n                      )}\n                    </td>\n                  </tr>\n                );\n              }\n            })}\n          </tbody>\n        </Table>\n      )}\n\n      <br />\n\n      {props.outboundFlights.length > 0 && (\n        <Table\n          striped\n          bordered\n          hover\n          variant=\"dark\"\n          style={{ width: \"95%\" }}\n          id=\"outboundTable\"\n        >\n          <thead>\n            <tr>\n              <th colSpan=\"7\" class=\"bg-primary text-white\">\n                Outbound Flights\n              </th>\n            </tr>\n            <tr>\n              <th>Duration</th>\n              <th>Airline</th>\n              <th>Flight</th>\n              <th>Dep Airport</th>\n              <th>Arr Airport</th>\n              <th>Dep</th>\n              <th>Arr</th>\n            </tr>\n          </thead>\n\n          <tbody>\n            {props.outboundFlights.map(Flight => {\n              if (Array.isArray(Flight.Flight)) {\n                const stopsNumber = Flight.Flight.length - 1;\n                const duration = getDuration(Flight.TotalJourney.Duration);\n                return Flight.Flight.map((Flight, index) => {\n                  if (index === 0) {\n                    return (\n                      <tr>\n                        <td rowSpan={stopsNumber + 1}>\n                          {duration} <br />\n                          {stopsNumber}\n                          {stopsNumber > 1 ? \" Stops\" : \" Stop\"}\n                        </td>\n                        <td>{Flight.MarketingCarrier.AirlineID}</td>\n                        <td>{Flight.MarketingCarrier.FlightNumber}</td>\n                        <td>{Flight.Departure.AirportCode}</td>\n                        <td>{Flight.Arrival.AirportCode}</td>\n                        <td>\n                          {getDateHour(\n                            Flight.Departure.ScheduledTimeLocal.DateTime\n                          )}\n                        </td>\n                        <td>\n                          {getDateHour(\n                            Flight.Arrival.ScheduledTimeLocal.DateTime\n                          )}\n                        </td>\n                      </tr>\n                    );\n                  } else {\n                    return (\n                      <tr>\n                        <td>{Flight.MarketingCarrier.AirlineID}</td>\n                        <td>{Flight.MarketingCarrier.FlightNumber}</td>\n                        <td>{Flight.Departure.AirportCode}</td>\n                        <td>{Flight.Arrival.AirportCode}</td>\n                        <td>\n                          {getDateHour(\n                            Flight.Departure.ScheduledTimeLocal.DateTime\n                          )}\n                        </td>\n                        <td>\n                          {getDateHour(\n                            Flight.Arrival.ScheduledTimeLocal.DateTime\n                          )}\n                        </td>\n                      </tr>\n                    );\n                  }\n                });\n              } else {\n                return (\n                  <tr>\n                    <td>\n                      {getDuration(Flight.TotalJourney.Duration)}\n                      <br />\n                      Non-stop\n                    </td>\n                    <td>{Flight.Flight.MarketingCarrier.AirlineID}</td>\n                    <td>{Flight.Flight.MarketingCarrier.FlightNumber}</td>\n                    <td>{Flight.Flight.Departure.AirportCode}</td>\n                    <td>{Flight.Flight.Arrival.AirportCode}</td>\n                    <td>\n                      {getDateHour(\n                        Flight.Flight.Departure.ScheduledTimeLocal.DateTime\n                      )}\n                    </td>\n                    <td>\n                      {getDateHour(\n                        Flight.Flight.Arrival.ScheduledTimeLocal.DateTime\n                      )}\n                    </td>\n                  </tr>\n                );\n              }\n            })}\n          </tbody>\n        </Table>\n      )}\n    </div>\n  );\n};\n\nexport default HomeList;\n","import React, { Component } from \"react\";\nimport Hero from \"../components/hero/hero\";\nimport HomeForm from \"../components/Home/HomeForm\";\nimport HomeList from \"../components/Home/HomeList\";\n\nexport default class Home extends Component {\n  state = {\n    flightsDataInbound: [],\n    flightsDataOutbound: [],\n    hotelDetails: [],\n    activitiesDetails: []\n  };\n\n  render() {\n    return (\n      <div>\n        <Hero\n          videosrc=\"https://pixabay.com/videos/download/video-10816_medium.mp4\"\n          h1=\"myTravelApp\"\n          h2=\"The world is yours.Explore it. Make the Experience.\"\n        />\n\n        <HomeForm refreshHotelsList={this.refreshHotelsList} />\n        <HomeList inboundFlights={this.state.flightsDataInbound}\n          outboundFlights={this.state.flightsDataOutbound}\n          hotelDetails={this.state.hotelDetails} \n          activitiesDetails = {this.state.activitiesDetails} />\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Alert,Form, Button, Col } from \"react-bootstrap\";\nimport { getFlights } from \"../../services/Api\";\nimport { trackPromise } from \"react-promise-tracker\";\nimport {\n  getToday,\n  getFormDate,\n  getDateApi\n} from \"../../services/DateTimeFormating\";\n\nexport default class FlightsForm extends Component {\n  state = {\n    flightFrom: \"\",\n    flightTo: \"\",\n    dateFlightFrom: getToday(0),\n    dateFlightTo: getToday(0),\n    flightsDataInbound: [],\n    flightsDataOutbound: [],\n  };\n\n  handleChange = event => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  handleDateFlightFromChange = event => {\n    let newDateFrom = new Date(event.target.value);\n    let newDateTo = new Date(this.state.dateFlightTo);\n    if (newDateFrom > newDateTo) {\n      this.setState({\n        dateFlightFrom: newDateFrom,\n        dateFlightTo: newDateFrom\n      });\n    } else {\n      this.setState({\n        dateFlightFrom: newDateFrom\n      });\n    }\n  };\n\n  handleDateFlightToChange = event => {\n    let newDateFrom = new Date(this.state.dateFlightFrom);\n    let newDateTo = new Date(event.target.value);\n    if (newDateFrom > newDateTo) {\n      this.setState({\n        dateFlightFrom: newDateTo,\n        dateFlightTo: newDateTo\n      });\n    } else {\n      this.setState({\n        dateFlightTo: newDateTo\n      });\n    }\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n\n    const { flightFrom, flightTo, dateFlightFrom, dateFlightTo } = this.state;\n\n    trackPromise(\n      getFlights(\n        flightFrom,\n        flightTo,\n        getDateApi(dateFlightFrom),\n        getDateApi(dateFlightTo)\n      ).then(response => {\n        this.props.refreshflightsList(response.flightsDataInbound,response.flightsDataOutbound,this.state.nonStopOnly);\n        this.setState({\n          flightsDataInbound: response.flightsDataInbound,\n          flightsDataOutbound: response.flightsDataOutbound\n        });\n      })\n    ).catch(err => {\n      console.log(err);\n    });\n  };\n\n  render() {\n    return (\n      <div align=\"center\">\n        <br />\n\n        <Form onSubmit={this.handleSubmit} style={{ width: \"95%\" }}>\n          <Form.Row>\n            <Col>\n              <Form.Label htmlFor=\"flightFrom\">From</Form.Label>\n\n              <Form.Control\n                type=\"text\"\n                onChange={this.handleChange}\n                id=\"flightFrom\"\n                name=\"flightFrom\"\n                value={this.state.flightFrom || \"\"}\n                placeholder=\"Origin airport IATA Code\"\n                required\n              />\n            </Col>\n\n            <Col>\n              <Form.Label htmlFor=\"flightTo\">To</Form.Label>\n\n              <Form.Control\n                type=\"text\"\n                onChange={this.handleChange}\n                id=\"flightTo\"\n                name=\"flightTo\"\n                value={this.state.flightTo || \"\"}\n                placeholder=\"Destination airport IATA Code\"\n                required\n              />\n            </Col>\n\n            <Col>\n              <Form.Label htmlFor=\"dateFlightFrom\">Date From</Form.Label>\n\n              <Form.Control\n                type=\"date\"\n                onChange={this.handleDateFlightFromChange}\n                id=\"dateFlightFrom\"\n                name=\"dateFlightFrom\"\n                value={getFormDate(this.state.dateFlightFrom)}\n                min={getFormDate(getToday(0))}\n                required\n              />\n            </Col>\n\n            <Col>\n              <Form.Label htmlFor=\"dateFlightTo\">Date To</Form.Label>\n\n              <Form.Control\n                type=\"date\"\n                onChange={this.handleDateFlightToChange}\n                id=\"dateFlightTo\"\n                name=\"dateFlightTo\"\n                value={getFormDate(this.state.dateFlightTo)}\n                min={getFormDate(getToday(0))}\n              />\n            </Col>\n          </Form.Row>\n          <Form.Row>\n            <Col>\n              <br />\n              <Button type=\"submit\">Flight Search</Button>\n            </Col>\n          </Form.Row>\n        </Form>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { Table, Alert, Tabs, Tab } from \"react-bootstrap\";\nimport { getDuration, getDateHour } from \"../../services/DateTimeFormating\";\n\nconst FlightsList = props => {\n  return (\n    <div\n      align=\"center\"\n      style={{ position: \"absolute\", zIndex: 1, width: \"95%\", color: \"grey\" }}\n    >\n      <br />\n      <Tabs defaultActiveKey=\"inbound\">\n        <br />\n\n        {/*\n      {props.inboundFlights.length === 0 && <Alert variant=\"danger\">No inbound flights found</Alert>}\n\n      {props.nonStopFlights === true ? <Alert variant=\"danger\">True</Alert> : <Alert variant=\"danger\">False</Alert>}\n    */}\n\n\n        {props.inboundFlights.length > 0 && (\n          \n          <Tab eventKey=\"inbound\" title=\"Inbound Flights\">\n            <Table\n              striped\n              bordered\n              hover\n              variant=\"dark\"\n              style={{ width: \"95%\" }}\n              id=\"inboundTable\"\n            >\n              <thead>\n              \n                <tr>\n                  <th colSpan=\"7\" class=\"bg-primary text-white\">\n                  \n                    Inbound Flights\n                  </th>\n                </tr>\n              </thead>\n              <thead>\n                <tr>\n                  <th>Duration</th>\n                  <th>Airline</th>\n                  <th>Flight</th>\n                  <th>Dep Airport</th>\n                  <th>Arr Airport</th>\n                  <th>Dep</th>\n                  <th>Arr</th>\n                </tr>\n              </thead>\n\n              <tbody>\n                {props.inboundFlights.map(Flight => {\n                  if (Array.isArray(Flight.Flight)) {\n                    const stopsNumber = Flight.Flight.length - 1;\n                    const duration = getDuration(Flight.TotalJourney.Duration);\n                    return Flight.Flight.map((Flight, index) => {\n                      if (index === 0) {\n                        return (\n                          <tr>\n                            <td rowSpan={stopsNumber + 1}>\n                              {duration} <br />\n                              {stopsNumber}\n                              {stopsNumber > 1 ? \" Stops\" : \" Stop\"}\n                            </td>\n                            <td>{Flight.MarketingCarrier.AirlineID}</td>\n                            <td>{Flight.MarketingCarrier.FlightNumber}</td>\n                            <td>{Flight.Departure.AirportCode}</td>\n                            <td>{Flight.Arrival.AirportCode}</td>\n                            <td>\n                              {getDateHour(\n                                Flight.Departure.ScheduledTimeLocal.DateTime\n                              )}\n                            </td>\n                            <td>\n                              {getDateHour(\n                                Flight.Arrival.ScheduledTimeLocal.DateTime\n                              )}\n                            </td>\n                          </tr>\n                        );\n                      } else {\n                        return (\n                          <tr>\n                            <td>{Flight.MarketingCarrier.AirlineID}</td>\n                            <td>{Flight.MarketingCarrier.FlightNumber}</td>\n                            <td>{Flight.Departure.AirportCode}</td>\n                            <td>{Flight.Arrival.AirportCode}</td>\n                            <td>\n                              {getDateHour(\n                                Flight.Departure.ScheduledTimeLocal.DateTime\n                              )}\n                            </td>\n                            <td>\n                              {getDateHour(\n                                Flight.Arrival.ScheduledTimeLocal.DateTime\n                              )}\n                            </td>\n                          </tr>\n                        );\n                      }\n                    });\n                  } else {\n                    return (\n                      <tr>\n                        <td>\n                          {getDuration(Flight.TotalJourney.Duration)}\n                          <br />\n                          Non-stop\n                        </td>\n                        <td>{Flight.Flight.MarketingCarrier.AirlineID}</td>\n                        <td>{Flight.Flight.MarketingCarrier.FlightNumber}</td>\n                        <td>{Flight.Flight.Departure.AirportCode}</td>\n                        <td>{Flight.Flight.Arrival.AirportCode}</td>\n                        <td>\n                          {getDateHour(\n                            Flight.Flight.Departure.ScheduledTimeLocal.DateTime\n                          )}\n                        </td>\n                        <td>\n                          {getDateHour(\n                            Flight.Flight.Arrival.ScheduledTimeLocal.DateTime\n                          )}\n                        </td>\n                      </tr>\n                    );\n                  }\n                })}\n              </tbody>\n            </Table>\n          </Tab>\n        )}\n\n        <br />\n\n        {props.outboundFlights.length === 0 && (\n          <Alert variant=\"danger\">No outbound flights found</Alert>\n        )}\n\n        {props.outboundFlights.length > 0 && (\n          <Tab eventKey=\"outbound\" title=\"Outbound Flights\">\n            <Table\n              striped\n              bordered\n              hover\n              variant=\"dark\"\n              style={{ width: \"95%\" }}\n              id=\"outboundTable\"\n            >\n              <thead>\n                <tr>\n                  <th colSpan=\"7\" class=\"bg-primary text-white\">\n                    Outbound Flights\n                  </th>\n                </tr>\n                <tr>\n                  <th>Duration</th>\n                  <th>Airline</th>\n                  <th>Flight</th>\n                  <th>Dep Airport</th>\n                  <th>Arr Airport</th>\n                  <th>Dep</th>\n                  <th>Arr</th>\n                </tr>\n              </thead>\n\n              <tbody>\n                {props.outboundFlights.map(Flight => {\n                  if (Array.isArray(Flight.Flight)) {\n                    const stopsNumber = Flight.Flight.length - 1;\n                    const duration = getDuration(Flight.TotalJourney.Duration);\n                    return Flight.Flight.map((Flight, index) => {\n                      if (index === 0) {\n                        return (\n                          <tr>\n                            <td rowSpan={stopsNumber + 1}>\n                              {duration} <br />\n                              {stopsNumber}\n                              {stopsNumber > 1 ? \" Stops\" : \" Stop\"}\n                            </td>\n                            <td>{Flight.MarketingCarrier.AirlineID}</td>\n                            <td>{Flight.MarketingCarrier.FlightNumber}</td>\n                            <td>{Flight.Departure.AirportCode}</td>\n                            <td>{Flight.Arrival.AirportCode}</td>\n                            <td>\n                              {getDateHour(\n                                Flight.Departure.ScheduledTimeLocal.DateTime\n                              )}\n                            </td>\n                            <td>\n                              {getDateHour(\n                                Flight.Arrival.ScheduledTimeLocal.DateTime\n                              )}\n                            </td>\n                          </tr>\n                        );\n                      } else {\n                        return (\n                          <tr>\n                            <td>{Flight.MarketingCarrier.AirlineID}</td>\n                            <td>{Flight.MarketingCarrier.FlightNumber}</td>\n                            <td>{Flight.Departure.AirportCode}</td>\n                            <td>{Flight.Arrival.AirportCode}</td>\n                            <td>\n                              {getDateHour(\n                                Flight.Departure.ScheduledTimeLocal.DateTime\n                              )}\n                            </td>\n                            <td>\n                              {getDateHour(\n                                Flight.Arrival.ScheduledTimeLocal.DateTime\n                              )}\n                            </td>\n                          </tr>\n                        );\n                      }\n                    });\n                  } else {\n                    return (\n                      <tr>\n                        <td>\n                          {getDuration(Flight.TotalJourney.Duration)}\n                          <br />\n                          Non-stop\n                        </td>\n                        <td>{Flight.Flight.MarketingCarrier.AirlineID}</td>\n                        <td>{Flight.Flight.MarketingCarrier.FlightNumber}</td>\n                        <td>{Flight.Flight.Departure.AirportCode}</td>\n                        <td>{Flight.Flight.Arrival.AirportCode}</td>\n                        <td>\n                          {getDateHour(\n                            Flight.Flight.Departure.ScheduledTimeLocal.DateTime\n                          )}\n                        </td>\n                        <td>\n                          {getDateHour(\n                            Flight.Flight.Arrival.ScheduledTimeLocal.DateTime\n                          )}\n                        </td>\n                      </tr>\n                    );\n                  }\n                })}\n              </tbody>\n            </Table>\n          </Tab>\n        )}\n      </Tabs>\n    </div>\n  );\n};\n\nexport default FlightsList;\n","import React, { Component } from \"react\";\nimport Hero from \"../components/hero/hero\";\nimport FlightsForm from \"../components/Flights/FlightsForm\";\nimport FlightsList from \"../components/Flights/FlightsList\";\n\n\nexport default class Flights extends Component {\n  state = {\n    flightsDataInbound: [],\n    flightsDataOutbound: [],\n    nonStopOnly: false\n  };\n\n  refreshflightsList = (flightsDataInbound,flightsDataOutbound,nonStopOnly) => {\n    this.setState({\n      flightsDataInbound: flightsDataInbound,\n      flightsDataOutbound: flightsDataOutbound,\n      nonStopOnly: nonStopOnly\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <Hero\n          videosrc=\"https://pixabay.com/videos/download/video-10816_medium.mp4\"\n          h1=\"Flights\"\n          h2=\"Choose your flights. Fly high.\"\n        />\n        <FlightsForm refreshflightsList={this.refreshflightsList} />\n        <FlightsList\n          inboundFlights={this.state.flightsDataInbound}\n          outboundFlights={this.state.flightsDataOutbound}\n          nonStopOnly={this.state.nonStopOnly}\n        />\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Form, Button, Col, Row, Container } from \"react-bootstrap\";\nimport { getHotels } from \"../../services/Api\";\nimport { trackPromise } from \"react-promise-tracker\";\nimport {\n  getToday,\n  getFormDate,\n  getDateApi,\n  getDatePlus\n} from \"../../services/DateTimeFormating\";\n\nexport default class HotelsForm extends Component {\n  state = {\n    flightTo: \"\",\n    dateFlightFrom: getToday(0),\n    dateFlightTo: getToday(1),\n    hotelsData: [],\n    error: \"\"\n  };\n\n  handleChange = event => {\n    const { name, value } = event.target;\n\n    this.setState({\n      [name]: value\n    });\n  };\n\n  handleDateFlightFromChange = event => {\n    let newDateFrom = new Date(event.target.value);\n    let newDateTo = new Date(this.state.dateFlightTo);\n\n    if (newDateFrom >= newDateTo) {\n      this.setState({\n        dateFlightFrom: newDateFrom,\n        dateFlightTo: getDatePlus(newDateFrom, 1)\n      });\n    } else {\n      this.setState({\n        dateFlightFrom: newDateFrom\n      });\n    }\n  };\n\n  handleDateFlightToChange = event => {\n    let newDateFrom = new Date(this.state.dateFlightFrom);\n    let newDateTo = new Date(event.target.value);\n    if (newDateFrom >= newDateTo) {\n      this.setState({\n        dateFlightFrom: getDatePlus(newDateTo, -1),\n        dateFlightTo: newDateTo\n      });\n    } else {\n      this.setState({\n        dateFlightTo: newDateTo\n      });\n    }\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n\n    const { flightTo, dateFlightFrom, dateFlightTo } = this.state;\n\n    trackPromise(\n      getHotels(\n        flightTo,\n        getDateApi(dateFlightFrom),\n        getDateApi(dateFlightTo)\n      ).then(response => {\n        this.props.refreshHotelsList(response);\n        this.setState({\n          hotelsData: response.hotelsData\n        });\n      })\n    ).catch(err => {\n      console.log(err);\n    });\n  };\n\n  render() {\n    return (\n      <div align=\"center\">\n        <Container>\n          <Row>\n            <Col lg={true}>\n              <Form onSubmit={this.handleSubmit} style={{ width: \"95%\" }}>\n                <Form.Row>\n                  <Col lg=\"4\">\n                    <Form.Label htmlFor=\"flightTo\">\n                      <h5>Hotel Location</h5>\n                    </Form.Label>\n\n                    <Form.Control\n                      type=\"text\"\n                      onChange={this.handleChange}\n                      id=\"flightTo\"\n                      name=\"flightTo\"\n                      value={this.state.flightTo || \"\"}\n                      placeholder=\"Destination airport IATA Code\"\n                      required\n                    />\n                  </Col>\n\n                  <Col lg=\"4\">\n                    <Form.Label htmlFor=\"dateFlightFrom\">\n                      <h5>Date From</h5>\n                    </Form.Label>\n\n                    <Form.Control\n                      type=\"date\"\n                      onChange={this.handleDateFlightFromChange}\n                      id=\"dateFlightFrom\"\n                      name=\"dateFlightFrom\"\n                      value={getFormDate(this.state.dateFlightFrom)}\n                      min={getFormDate(getToday(0))}\n                      required\n                    />\n                  </Col>\n\n                  <Col lg=\"4\">\n                    <Form.Label htmlFor=\"dateFlightTo\">\n                      <h5>Date To</h5>\n                    </Form.Label>\n\n                    <Form.Control\n                      type=\"date\"\n                      onChange={this.handleDateFlightToChange}\n                      id=\"dateFlightTo\"\n                      name=\"dateFlightTo\"\n                      value={getFormDate(this.state.dateFlightTo)}\n                      min={getFormDate(getToday(1))}\n                    />\n                  </Col>\n                </Form.Row>\n                <Form.Row>\n                  <Col>\n                    <br />\n                    <Button type=\"submit\" size=\"lg\">Hotel Search</Button>\n                  </Col>\n                </Form.Row>\n              </Form>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Container, Col, Row, Card, CardDeck, Button } from \"react-bootstrap\";\nimport mapboxgl from \"mapbox-gl\";\n\nconst HotelsList = props => {\n\n  return (\n    <div\n      style={{\n        position: \"absolute\",\n        zIndex: 1,\n        width: \"100%\",\n        align: \"center\"\n      }}\n    >\n      <br />\n      {props.hotelsData.length > 0 && (\n        <Container style={{ textAlignment: \"center\" }}>\n          <Row className=\"row justify-content-center\">\n            {props.hotelsData.map(Hotel => {\n              return (\n                <Card\n                  style={{ align: \"center\", margin: \"2px\" }}\n                  className=\"col-xl-3 col-lg-3 col-md-12 col-sm-12 col-sm-12\"\n                >\n                  <Link to={`/Hotels/${Hotel.code}`}>\n                    <Card.Img\n                      variant=\"top\"\n                      src={`http://photos.hotelbeds.com/giata/bigger/${\n                        Hotel.images[0].path\n                      }`}\n                      class=\"card-img-top\"\n                    />\n                  </Link>\n                  <Card.Body>\n                    <Card.Title>\n                      <Link to={`/Hotels/${Hotel.code}`}>\n                        {Hotel.name.content.toUpperCase()}\n                      </Link>\n                      <br />\n                      <img\n                        src={`http://cdn4.hotelopia.com/freya/img/stars/${\n                          Hotel.categoryCode\n                        }.gif`}\n                        alt=\"Hotel Stars\"\n                      />\n                    </Card.Title>\n                    <Card.Text>\n                      <p class=\"block-with-text\">{Hotel.description.content}</p>\n                    </Card.Text>\n                  </Card.Body>\n                  <Card.Footer>\n                    <Link to={`/Hotels/${Hotel.code}`}>\n                      <Button variant=\"primary\">More info</Button>\n                    </Link>\n                  </Card.Footer>\n                </Card>\n              );\n            })}\n          </Row>\n        </Container>\n      )}\n    </div>\n  );\n};\n\nexport default HotelsList;\n","import React, { Component } from \"react\";\nimport Hero from \"../components/hero/hero\";\nimport HotelsForm from \"../components/Hotels/HotelsForm\";\nimport HotelsList from \"../components/Hotels/HotelsList\";\n\nexport default class Hotels extends Component {\n  state = {\n    hotelsData: []\n  };\n\n  refreshHotelsList = response => {\n    this.setState({\n      hotelsData: response.hotelsData\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <center>\n        <Hero\n          videosrc=\"https://pixabay.com/videos/download/video-24216_medium.mp4\"\n          h1=\"Hotels\"\n          h2=\"Whether luxurious, comfortable or just exciting. Choose your Hotel\"\n        />\n\n        <HotelsForm refreshHotelsList={this.refreshHotelsList} />\n        <HotelsList hotelsData={this.state.hotelsData} />\n        </center>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { getHotelDetails } from \"../services/Api\";\nimport Carousel from \"react-bootstrap/Carousel\";\nimport Hero from \"../components/hero/hero\";\nimport ReactMapGL from \"react-map-gl\";\n\nexport default class HotelDetails extends Component {\n  state = {\n    hotelDetails: [],\n    viewport: {\n      width: 400,\n      height: 400,\n      zoom: 8\n    }\n  };\n\n  getHotelData = () => {\n    const hotelId = this.props.match.params.id;\n\n    return getHotelDetails(hotelId)\n      .then(response => {\n        this.setState({\n          hotelDetails: response,\n          viewportlatitude: response.hotel.coordinates.latitude,\n          longitude: response.hotel.coordinates.longitude\n        });\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  componentDidMount() {\n    this.getHotelData();\n  }\n\n  render() {\n    return (\n      <div align=\"center\" style={{ width: \"100%\" }}>\n        <Hero videosrc=\"https://pixabay.com/videos/download/video-24216_medium.mp4\" />\n\n        {Object.entries(this.state.hotelDetails).length > 0 && (\n          <div\n            style={{\n              width: \"95%\",\n              backgroundColor: \"white\",\n              padding: \"10px\",\n              textAlign: \"left\"\n            }}\n          >\n            <h2>\n              {this.state.hotelDetails.hotel.name.content}\n              <img\n                src={`http://cdn4.hotelopia.com/freya/img/stars/${\n                  this.state.hotelDetails.hotel.category.code\n                }.gif`}\n                alt=\"Hotel Stars\"\n              />\n            </h2>\n            <h5>Description</h5>\n            <p>{this.state.hotelDetails.hotel.description.content}</p>\n\n            <h5>Location</h5>\n            <p>\n              {this.state.hotelDetails.hotel.address.content}{\" \"}\n              {this.state.hotelDetails.hotel.postalCode}{\" \"}\n              {this.state.hotelDetails.hotel.city.content}{\" \"}\n              {this.state.hotelDetails.hotel.country.description.content}\n            </p>\n            <p>{this.state.hotelDetails.hotel.coordinates.longitude}</p>\n            <p>{this.state.hotelDetails.hotel.coordinates.latitude}</p>\n            <ReactMapGL\n              {...this.state.viewport}\n              onViewportChange={viewport => this.setState({ viewport })}\n            />\n\n            <h5>Photos</h5>\n            <center>\n              <Carousel className=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-sm-12\">\n                {this.state.hotelDetails.hotel.images.map(image => {\n                  return (\n                    <Carousel.Item>\n                      <img\n                        className=\"d-block w-100\"\n                        src={`http://photos.hotelbeds.com/giata/bigger/${\n                          image.path\n                        }`}\n                        alt=\" \"\n                      />\n                    </Carousel.Item>\n                  );\n                })}\n              </Carousel>\n            </center>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Form, Button, Col, Row, Container, Badge } from \"react-bootstrap\";\nimport { getActivities } from \"../../services/Api\";\nimport { trackPromise } from \"react-promise-tracker\";\nimport {\n  getToday,\n  getFormDate,\n  getDateApi,\n  getDatePlus\n} from \"../../services/DateTimeFormating\";\n\nexport default class ActivitiesForm extends Component {\n  state = {\n    flightTo: \"\",\n    dateFlightFrom: getToday(0),\n    dateFlightTo: getToday(1),\n    activitiesData: []\n  };\n\n  handleChange = event => {\n    const { name, value } = event.target;\n\n    this.setState({\n      [name]: value\n    });\n  };\n\n  handleDateFlightFromChange = event => {\n    let newDateFrom = new Date(event.target.value);\n    let newDateTo = new Date(this.state.dateFlightTo);\n\n    if (newDateFrom >= newDateTo) {\n      this.setState({\n        dateFlightFrom: newDateFrom,\n        dateFlightTo: getDatePlus(newDateFrom, 0)\n      });\n    } else {\n      this.setState({\n        dateFlightFrom: newDateFrom\n      });\n    }\n  };\n\n  handleDateFlightToChange = event => {\n    let newDateFrom = new Date(this.state.dateFlightFrom);\n    let newDateTo = new Date(event.target.value);\n    if (newDateFrom >= newDateTo) {\n      this.setState({\n        dateFlightFrom: getDatePlus(newDateTo, 0),\n        dateFlightTo: newDateTo\n      });\n    } else {\n      this.setState({\n        dateFlightTo: newDateTo\n      });\n    }\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n\n    const { flightTo, dateFlightFrom, dateFlightTo } = this.state;\n\n    trackPromise(\n      getActivities(\n        flightTo,\n        getDateApi(dateFlightFrom),\n        getDateApi(dateFlightTo)\n      ).then(response => {\n        console.log(response.activitiesList.activities);\n        this.props.refreshActivitiesList(response.activitiesList.activities);\n        this.setState({\n          activitiesData: response.activitiesList.activities\n        });\n      })\n    ).catch(err => {\n      console.log(err);\n    });\n  };\n\n  render() {\n    return (\n      <div align=\"center\">\n        <Container>\n          <Row>\n            <Col lg={true}>\n              <Form onSubmit={this.handleSubmit} style={{ width: \"95%\" }}>\n                <Form.Row>\n                  <Col lg=\"4\">\n                    <Form.Label htmlFor=\"flightTo\">\n                      <h5>\n                        Activity Location\n                      </h5>\n                    </Form.Label>\n                    <Form.Control\n                      type=\"text\"\n                      onChange={this.handleChange}\n                      id=\"flightTo\"\n                      name=\"flightTo\"\n                      value={this.state.flightTo || \"\"}\n                      placeholder=\"Destination airport IATA Code\"\n                      required\n                    />\n                  </Col>\n\n                  <Col lg=\"4\">\n                    <Form.Label htmlFor=\"dateFlightFrom\">\n                    <h5>\n                        Date From\n                      </h5>\n                    </Form.Label>\n                    <Form.Control\n                      type=\"date\"\n                      onChange={this.handleDateFlightFromChange}\n                      id=\"dateFlightFrom\"\n                      name=\"dateFlightFrom\"\n                      value={getFormDate(this.state.dateFlightFrom)}\n                      min={getFormDate(getToday(0))}\n                      required\n                    />\n                  </Col>\n\n                  <Col lg=\"4\">\n                    <Form.Label htmlFor=\"dateFlightTo\">\n                    <h5>\n                        Date To\n                      </h5>\n                    </Form.Label>\n\n                    <Form.Control\n                      type=\"date\"\n                      onChange={this.handleDateFlightToChange}\n                      id=\"dateFlightTo\"\n                      name=\"dateFlightTo\"\n                      value={getFormDate(this.state.dateFlightTo)}\n                      min={getFormDate(getToday(1))}\n                      required\n                    />\n                  </Col>\n                </Form.Row>\n                <Form.Row>\n                  <Col>\n                    <br />\n                    <Button type=\"submit\" size=\"lg\">Activities Search</Button>\n                  </Col>\n                </Form.Row>\n              </Form>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Container,\n  Row,\n  Card,\n  Button\n} from \"react-bootstrap\";\n\nconst ActivitiesList = props => {\n  return (\n    <div\n      style={{\n        position: \"absolute\",\n        zIndex: 1,\n        width: \"100%\",\n        align: \"center\"\n      }}\n    >\n      <br />\n\n      {props.activitiesData.length > 0 && (\n        <Container style={{align: \"center\"}}>\n          <Row className=\"row justify-content-center\">\n            {props.activitiesData.map(activity => {\n              return (\n                <Card\n                  style={{align: \"center\", margin: \"2px\" }}\n                  className=\"col-xl-3 col-lg-3 col-md-12 col-sm-12 col-sm-12\"\n                >\n                  <Link to={`/Activities/${activity.code}`}>\n                    <Card.Img\n                      variant=\"top\"\n                      src={`${\n                        activity.content.media.images[0].urls[1].resource\n                      }`}\n                      class=\"card-img-top\"\n                    />\n                  </Link>\n                  <Card.Body>\n                    <Card.Title>\n                      <Link to={`/Activities/${activity.code}`}>\n                        {activity.content.name.toUpperCase()}\n                      </Link>\n                    </Card.Title>\n                    <Card.Text>\n                      <p\n                        class=\"block-with-text\"\n                        dangerouslySetInnerHTML={{\n                          __html: activity.content.description\n                        }}\n                      />\n                    </Card.Text>\n                  </Card.Body>\n                  <Card.Footer>\n                    <Link to={`/Activities/${activity.code}`}>\n                      <Button variant=\"primary\">More info</Button>\n                    </Link>\n                  </Card.Footer>\n                </Card>\n              );\n            })}\n          </Row>\n        </Container>\n      )}\n    </div>\n  );\n};\n\nexport default ActivitiesList;\n","import React, { Component } from \"react\";\nimport Hero from \"../components/hero/hero\";\nimport ActivitiesForm from \"../components/Activities/ActivitiesForm\";\nimport ActivitiesList from \"../components/Activities/ActivitiesList\";\n\nexport default class Activities extends Component {\n  state = {\n    activitiesData: []\n  };\n\n  refreshActivitiesList = response => {\n    this.setState({\n      activitiesData: response\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <center>\n          <Hero\n            videosrc=\"https://pixabay.com/videos/download/video-10816_medium.mp4\"\n            h1=\"Experience the new\"\n            h2=\"Guide yourself through the the most exciting Activities\"\n          />\n\n          <ActivitiesForm refreshActivitiesList={this.refreshActivitiesList} />\n          <ActivitiesList activitiesData={this.state.activitiesData} />\n        </center>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { getActivityDetails } from \"../services/Api\";\nimport Hero from \"../components/hero/hero\";\n\nexport default class ActivityDetails extends Component {\n  state = {\n    activityDetails: {}\n  };\n\n  getActivityData = () => {\n    const activityId = this.props.match.params.id;\n\n    return getActivityDetails(activityId)\n      .then(response => {\n        this.setState({\n          activityDetails: response\n        });\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  componentDidMount() {\n    this.getActivityData();\n  }\n\n  render() {\n    return (\n      <div align=\"center\" style={{ width: \"100%\" }}>\n        <Hero videosrc=\"https://pixabay.com/videos/download/video-10816_medium.mp4\" />\n\n        <div style={{ width: \"95%\",backgroundColor: \"white\", padding:\"10px\",textAlign: \"left\" }}>\n        <h2>{this.state.activityDetails.name}</h2>\n\n        <div\n          dangerouslySetInnerHTML={{\n            __html: this.state.activityDetails.description\n          }}\n          align=\"left\"\n        />\n      </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport \"./App.css\";\nimport Navbar from \"./components/Navbar\";\nimport { Switch, Route } from \"react-router-dom\";\nimport Home from \"./containers/Home\";\nimport Flights from \"./containers/Flights\";\nimport Hotels from \"./containers/Hotels\";\nimport HotelDetails from \"./containers/HotelDetails\";\nimport Activities from \"./containers/Activities\";\nimport ActivityDetails from \"./containers/ActivityDetails\";\nimport Hero from \"./components/hero/hero\";\n\nfunction App() {\n  return (\n    <>\n      <Navbar />\n\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route exact path=\"/Flights\" component={Flights} />\n        <Route exact path=\"/Hotels\" component={Hotels} />\n        <Route exact path=\"/Hotels/:id\" component={HotelDetails} />\n        <Route exact path=\"/Activities\" component={Activities} />\n        <Route exact path=\"/Activities/:id\" component={ActivityDetails} />\n      </Switch>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from \"react-router-dom\";\nimport { usePromiseTracker } from \"react-promise-tracker\";\nimport Loader from 'react-loader-spinner';\n\nconst LoadingIndicator = props => {\n  const { promiseInProgress } = usePromiseTracker();\n\n  return promiseInProgress && \n    <div\n      style={{\n        position: \"absolute\",\n        zIndex: 2147483647,\n        width: \"100%\",\n        height: \"100\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\"\n      }}\n    >\n      <Loader type=\"Plane\" color=\"#ffffff\" height=\"100\" width=\"100\" />\n</div>\n};\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n    <LoadingIndicator/>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}