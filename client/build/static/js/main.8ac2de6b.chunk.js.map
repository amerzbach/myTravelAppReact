{"version":3,"sources":["components/Navbar.js","components/hero/hero.js","services/Api.js","services/DateTimeFormating.js","components/Home/HomeForm.js","components/Home/HomeList.js","containers/Home.js","components/Flights/FlightsForm.js","components/Flights/FlightsList.js","containers/Flights.js","components/Hotels/HotelsForm.js","components/Hotels/HotelsList.js","containers/Hotels.js","containers/HotelDetails.js","components/Activities/ActivitiesForm.js","components/Activities/ActivitiesList.js","containers/Activities.js","containers/ActivityDetails.js","App.js","serviceWorker.js","index.js"],"names":["CustomNavbar","react_default","a","createElement","Navbar","className","variant","Brand","href","Nav","Link","Hero","dist_default","src","this","props","videosrc","h1","h2","Component","getFlights","flightFrom","flightTo","dateFlightFrom","dateFlightTo","axios","post","then","response","console","log","data","getHotels","getHotelDetails","hotelId","get","concat","getActivities","getActivityDetails","activityId","getAll","getDuration","duration","replace","getDateHour","date","newDate","Date","year","getFullYear","month","getMonth","dt","getDate","hour","getHours","minutes","getMinutes","getDateApi","getToday","num","setHours","setDate","getDatePlus","getFormDate","HomeForm","state","flightsDataInbound","flightsDataOutbound","handleChange","event","_event$target","target","name","value","_this","setState","Object","defineProperty","handleDateFlightFromChange","newDateFrom","handleDateFlightToChange","newDateTo","handleSubmit","preventDefault","_this$state","trackPromise","activities","refreshHomeList","ScheduleResource","Schedule","hotels","hotelDetails","activitiesDetails","catch","err","align","Form","onSubmit","style","width","Row","Col","lg","Label","htmlFor","Control","type","onChange","id","placeholder","required","min","Button","size","HomeList","position","zIndex","Tabs","defaultActiveKey","inboundFlights","length","Tab","eventKey","title","Table","striped","bordered","hover","map","Flight","Array","isArray","stopsNumber","TotalJourney","Duration","index","rowSpan","MarketingCarrier","AirlineID","FlightNumber","Departure","AirportCode","Arrival","ScheduledTimeLocal","DateTime","outboundFlights","Container","Hotel","Card","margin","react_router_dom","to","code","Img","images","path","class","Body","Title","content","toUpperCase","categoryCode","alt","Text","description","Footer","activity","media","urls","resource","dangerouslySetInnerHTML","__html","Home","hero_hero","HomeForm_HomeForm","Home_HomeList","FlightsForm","refreshflightsList","nonStopOnly","FlightsList","Flights","FlightsForm_FlightsForm","Flights_FlightsList","HotelsForm","hotelsData","error","refreshHotelsList","HotelsList","viewport","height","zoom","latitude","longitude","backgroundColor","textAlignment","esm","coordinates","offsetLeft","offsetTop","react_icons_kit","icon","home","Hotels","HotelsForm_HotelsForm","HotelsList_HotelsList","HotelDetails","getHotelData","match","params","entries","padding","textAlign","hotel","category","address","postalCode","city","country","Carousel_default","image","Item","ActivitiesForm","activitiesData","activitiesList","refreshActivitiesList","ActivitiesList","Activities","ActivitiesForm_ActivitiesForm","Activities_ActivitiesList","ActivityDetails","activityDetails","getActivityData","App","Fragment","components_Navbar","react_router","exact","component","Boolean","window","location","hostname","ReactDOM","render","src_App","usePromiseTracker","promiseInProgress","display","justifyContent","alignItems","react_loader_spinner_default","color","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8ac2de6b.chunk.js","sourcesContent":["import React from \"react\";\nimport { Navbar, Nav } from \"react-bootstrap\";\n\nconst CustomNavbar = () => {\n  return (\n    <Navbar className=\"nav fixed-top navbar-scroll-point\" variant=\"dark\">\n      <Navbar.Brand href=\"/\">myTravelApp</Navbar.Brand>\n      <Nav.Link href=\"/Flights\" className=\"navLink\">\n        Flights\n      </Nav.Link>\n      <Nav.Link href=\"/Hotels\" className=\"navLink\">\n        Hotels\n      </Nav.Link>\n      <Nav.Link href=\"/Activities\" className=\"navLink\">\n        Activities\n      </Nav.Link>\n    </Navbar>\n  );\n};\n\nexport default CustomNavbar;\n","import React, { Component } from 'react'\nimport \"./hero.css\"\n\nimport BackgroundVideo from 'react-background-video-player';\n\nclass Hero extends Component {\n\n\n\n  render() {\n    return (\n      <div className=\"hero\">\n        <BackgroundVideo\n        src={this.props.videosrc}\n        />\n        <div className=\"hero-text\">\n          <h1>{this.props.h1}</h1>\n          <h2>{this.props.h2}</h2>\n        </div>\n      </div>\n          )\n        }\n      }\n\n      export default Hero;","import axios from \"axios\";\n\n\nconst getFlights = (flightFrom, flightTo, dateFlightFrom, dateFlightTo) => (\n  axios\n    .post(\"/api/Flights\", {\n      flightFrom: flightFrom,\n      flightTo: flightTo,\n      dateFlightFrom: dateFlightFrom,\n      dateFlightTo: dateFlightTo\n    })\n    .then(response => {\n      console.log(response.data);\n      return response.data;\n    })\n) \n\nconst getHotels = (flightTo, dateFlightFrom, dateFlightTo) => (\n  axios\n  .post(\"/api/Hotels\", {\n    flightTo: flightTo,\n    dateFlightFrom: dateFlightFrom,\n    dateFlightTo: dateFlightTo\n  })\n  .then(response => {\n    console.log(response.data);\n    return response.data;\n  })\n)\n\nconst getHotelDetails = (hotelId) => (\n  axios\n  .get(`/api/Hotels/search/${hotelId}`)\n  .then(response => {\n    return response.data;\n  })\n)\n\nconst getActivities = (flightTo, dateFlightFrom, dateFlightTo) => (\n  axios\n  .post(\"/api/Activities\", {\n    flightTo: flightTo,\n    dateFlightFrom: dateFlightFrom,\n    dateFlightTo: dateFlightTo\n  })\n  .then(response => {\n    console.log(response.data);\n    return response.data;\n  })\n)\n\nconst getActivityDetails = (activityId) => (\n  axios\n  .get(`/api/Activities/search/${activityId}`)\n  .then(response => {\n    console.log(response);\n    return response.data;\n  })\n)\n\nconst getAll = (flightFrom, flightTo, dateFlightFrom, dateFlightTo) => (\n  axios\n    .post(\"/api/All\", {\n      flightFrom: flightFrom,\n      flightTo: flightTo,\n      dateFlightFrom: dateFlightFrom,\n      dateFlightTo: dateFlightTo\n    })\n    .then(response => {\n      console.log(response.data);\n      return response.data;\n    })\n) \n\nexport { getFlights,getHotels, getHotelDetails, getActivities, getActivityDetails, getAll };\n","const getDuration = duration => {\n  // Transforms format of durations strings like P1DT5H35M into 1D 5H 35m\n  // Using regular expressions for formating\n\n  duration = duration.replace(/P/, \"\");\n  duration = duration.replace(/T/, \"\");\n  duration = duration.replace(/D/, \"D \");\n  duration = duration.replace(/H/, \"H \");\n  duration = duration.replace(/M/, \"m\");\n  return duration;\n};\n\nconst getDateHour = date => {\n  // Transforms format of date hours like this 2019-07-29T06:20 into 6:20 29/07/2019\n  \n  let newDate = new Date(date);\n\n  let year = newDate.getFullYear();\n  let month = newDate.getMonth() + 1;\n  let dt = newDate.getDate();\n  let hour = newDate.getHours();\n  let minutes = newDate.getMinutes();\n\n  if (dt < 10) {\n    dt = \"0\" + dt;\n  }\n  if (month < 10) {\n    month = \"0\" + month;\n  }\n  if (minutes < 10 ) {\n    minutes = \"0\" + minutes;\n  }\n\n  return hour + \":\" + minutes + \" \"+ dt + \"/\" + month + \"/\" + year;\n};\n\n\nconst getDateApi = date => {\n  // Transforms format of date hours like this 2019-07-29T06:20 into 2019-07-29 for Api Calls\n  \n  let newDate = new Date(date);\n\n  let year = newDate.getFullYear();\n  let month = newDate.getMonth() + 1;\n  let dt = newDate.getDate();\n\n  if (dt < 10) {\n    dt = \"0\" + dt;\n  }\n  if (month < 10) {\n    month = \"0\" + month;\n  }\n\n  return year + \"-\" + month + \"-\" + dt;\n};\n\nconst getToday = (num) => {\n  // Returs date of today + num \n  \n  let newDate = new Date();\n  newDate.setHours(0,0)\n  newDate.setDate(newDate.getDate() + num)\n  return newDate;\n\n}\n\nconst getDatePlus = (date,num) => {\n  // Returs date + num \n  \n  let newDate = new Date(date);\n  newDate = newDate.setDate(newDate.getDate() + num)\n  return newDate;\n\n}\n\n\nconst getFormDate = (date) => {\n  // Returs date formated for input type date YYYY-MM-DD\n  \n  let newDate = new Date(date);\n  let year = newDate.getFullYear();\n  let month = newDate.getMonth() + 1;\n  let dt = newDate.getDate();\n\n  if (dt < 10) {\n    dt = \"0\" + dt;\n  }\n  if (month < 10) {\n    month = \"0\" + month;\n  }\n\n  return year + \"-\" + month + \"-\" + dt;\n}\n\n\nexport { getDuration, getDateHour, getDateApi, getToday, getFormDate, getDatePlus };\n","import React, { Component } from \"react\";\nimport { Form, Button, Col } from \"react-bootstrap\";\nimport { getAll } from \"../../services/Api\";\nimport { trackPromise } from \"react-promise-tracker\";\nimport {\n  getToday,\n  getFormDate,\n  getDateApi,\n  getDatePlus\n} from \"../../services/DateTimeFormating\";\n\nexport default class HomeForm extends Component {\n  state = {\n    flightFrom: \"\",\n    flightTo: \"\",\n    dateFlightFrom: getToday(1),\n    dateFlightTo: getToday(4),\n    flightsDataInbound: [],\n    flightsDataOutbound: []\n  };\n\n  handleChange = event => {\n    const { name, value } = event.target;\n\n    this.setState({\n      [name]: value\n    });\n    console.log(name, value);\n  };\n\n  handleDateFlightFromChange = event => {\n    let newDateFrom = new Date(event.target.value);\n    let newDateTo = new Date(this.state.dateFlightTo);\n    if (newDateFrom > newDateTo) {\n      this.setState({\n        dateFlightFrom: newDateFrom,\n        dateFlightTo: getDatePlus(newDateFrom, 1)\n      });\n    } else {\n      this.setState({\n        dateFlightFrom: newDateFrom\n      });\n    }\n  };\n\n  handleDateFlightToChange = event => {\n    let newDateFrom = new Date(this.state.dateFlightFrom);\n    let newDateTo = new Date(event.target.value);\n    if (newDateFrom > newDateTo) {\n      this.setState({\n        dateFlightFrom: getDatePlus(newDateTo, -1),\n        dateFlightTo: newDateTo\n      });\n    } else {\n      this.setState({\n        dateFlightTo: newDateTo\n      });\n    }\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n\n    const { flightFrom, flightTo, dateFlightFrom, dateFlightTo } = this.state;\n\n    trackPromise(\n      getAll(\n        flightFrom,\n        flightTo,\n        getDateApi(dateFlightFrom),\n        getDateApi(dateFlightTo)\n      ).then(response => {\n        console.log(response[3].activities);\n        this.props.refreshHomeList(response[0].ScheduleResource.Schedule,response[1].ScheduleResource.Schedule,response[2].hotels,response[3].activities);\n        this.setState({\n          flightsDataInbound: response[0].ScheduleResource.Schedule,\n          flightsDataOutbound: response[1].ScheduleResource.Schedule,\n          hotelDetails: response[2].hotels,\n          activitiesDetails: response[3].activities\n        });\n      })\n    ).catch(err => {\n      console.log(err);\n    });\n  };\n\n  render() {\n    return (\n      <div align=\"center\">\n        <br />\n\n        <Form onSubmit={this.handleSubmit} style={{ width: \"95%\" }}>\n          <Form.Row>\n            <Col lg=\"3\">\n              <Form.Label htmlFor=\"flightFrom\">From</Form.Label>\n\n              <Form.Control\n                type=\"text\"\n                onChange={this.handleChange}\n                id=\"flightFrom\"\n                name=\"flightFrom\"\n                value={this.state.flightFrom || \"\"}\n                placeholder=\"Origin airport IATA Code\"\n                required\n              />\n            </Col>\n\n            <Col lg=\"3\">\n              <Form.Label htmlFor=\"flightTo\">To</Form.Label>\n\n              <Form.Control\n                type=\"text\"\n                onChange={this.handleChange}\n                id=\"flightTo\"\n                name=\"flightTo\"\n                value={this.state.flightTo || \"\"}\n                placeholder=\"Destination airport IATA Code\"\n                required\n              />\n            </Col>\n\n            <Col lg=\"3\">\n              <Form.Label htmlFor=\"dateFlightFrom\">Depart</Form.Label>\n\n              <Form.Control\n                type=\"date\"\n                onChange={this.handleDateFlightFromChange}\n                id=\"dateFlightFrom\"\n                name=\"dateFlightFrom\"\n                value={getFormDate(this.state.dateFlightFrom)}\n                min={getFormDate(getToday(0))}\n                required\n              />\n            </Col>\n\n            <Col lg=\"3\">\n              <Form.Label htmlFor=\"dateFlightTo\">Return</Form.Label>\n\n              <Form.Control\n                type=\"date\"\n                onChange={this.handleDateFlightToChange}\n                id=\"dateFlightTo\"\n                name=\"dateFlightTo\"\n                value={getFormDate(this.state.dateFlightTo)}\n                min={getFormDate(getToday(0))}\n                required\n              />\n            </Col>\n          </Form.Row>\n\n          <Form.Row>\n            <Col>\n              <br />\n              <Button type=\"submit\" size=\"lg\">Search</Button>\n            </Col>\n          </Form.Row>\n        </Form>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport {\n  Table,\n  Tabs,\n  Tab,\n  Button,\n  Card,\n  Container,\n  Row\n} from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { getDuration, getDateHour } from \"../../services/DateTimeFormating\";\n\nconst HomeList = props => {\n  return (\n    <div\n      style={{\n        position: \"absolute\",\n        zIndex: 1,\n        width: \"100%\",\n        align: \"center\"\n      }}\n    >\n      <br />\n      <center>\n        <div\n          style={{\n            width: \"95%\",\n            align: \"center\"\n          }}\n        >\n          <Tabs\n            defaultActiveKey=\"inbound\"\n            className=\"with-nav-tabs.panel-primary nav-tabs\"\n          >\n            <br />\n            {props.inboundFlights.length > 0 && (\n              <Tab\n                eventKey=\"inbound\"\n                title=\"Depart Flights\"\n                className=\"with-nav-tabs.panel-primary nav-tabs panel.with-nav-tabs\"\n              >\n                <Table\n                  striped\n                  bordered\n                  hover\n                  variant=\"light\"\n                  id=\"inboundTable\"\n                  className=\"largeTable\"\n                >\n                  <thead>\n                    <tr>\n                      <th>Duration</th>\n                      <th>Flight</th>\n                      <th>Airports</th>\n                      <th>Dep</th>\n                      <th>Arr</th>\n                    </tr>\n                  </thead>\n\n                  <tbody>\n                    {props.inboundFlights.map(Flight => {\n                      if (Array.isArray(Flight.Flight)) {\n                        const stopsNumber = Flight.Flight.length - 1;\n                        const duration = getDuration(\n                          Flight.TotalJourney.Duration\n                        );\n                        return Flight.Flight.map((Flight, index) => {\n                          if (index === 0) {\n                            return (\n                              <tr>\n                                <td rowSpan={stopsNumber + 1}>\n                                  {duration} <br />\n                                  {stopsNumber}\n                                  {stopsNumber > 1 ? \" Stops\" : \" Stop\"}\n                                </td>\n                                <td>\n                                  {Flight.MarketingCarrier.AirlineID}{\" \"}\n                                  {Flight.MarketingCarrier.FlightNumber}\n                                </td>\n                                <td>\n                                  {Flight.Departure.AirportCode}-\n                                  {Flight.Arrival.AirportCode}\n                                </td>\n                                <td>\n                                  {getDateHour(\n                                    Flight.Departure.ScheduledTimeLocal.DateTime\n                                  )}\n                                </td>\n                                <td>\n                                  {getDateHour(\n                                    Flight.Arrival.ScheduledTimeLocal.DateTime\n                                  )}\n                                </td>\n                              </tr>\n                            );\n                          } else {\n                            return (\n                              <tr>\n                                <td>\n                                  {Flight.MarketingCarrier.AirlineID}{\" \"}\n                                  {Flight.MarketingCarrier.FlightNumber}\n                                </td>\n                                <td>\n                                  {Flight.Departure.AirportCode}-\n                                  {Flight.Arrival.AirportCode}\n                                </td>\n                                <td>\n                                  {getDateHour(\n                                    Flight.Departure.ScheduledTimeLocal.DateTime\n                                  )}\n                                </td>\n                                <td>\n                                  {getDateHour(\n                                    Flight.Arrival.ScheduledTimeLocal.DateTime\n                                  )}\n                                </td>\n                              </tr>\n                            );\n                          }\n                        });\n                      } else {\n                        return (\n                          <tr>\n                            <td>\n                              {getDuration(Flight.TotalJourney.Duration)}{\" \"}\n                              Non-stop\n                            </td>\n                            <td>\n                              {Flight.Flight.MarketingCarrier.AirlineID}{\" \"}\n                              {Flight.Flight.MarketingCarrier.FlightNumber}\n                            </td>\n                            <td>\n                              {Flight.Flight.Departure.AirportCode}-\n                              {Flight.Flight.Arrival.AirportCode}\n                            </td>\n                            <td>\n                              {getDateHour(\n                                Flight.Flight.Departure.ScheduledTimeLocal\n                                  .DateTime\n                              )}\n                            </td>\n                            <td>\n                              {getDateHour(\n                                Flight.Flight.Arrival.ScheduledTimeLocal\n                                  .DateTime\n                              )}\n                            </td>\n                          </tr>\n                        );\n                      }\n                    })}\n                  </tbody>\n                </Table>\n              </Tab>\n            )}\n\n            <br />\n\n            {props.outboundFlights.length > 0 && (\n              <Tab\n                eventKey=\"outbound\"\n                title=\"Return Flights\"\n                className=\"with-nav-tabs.panel-primary nav-tabs\"\n              >\n                <Table\n                  striped\n                  bordered\n                  hover\n                  variant=\"light\"\n                  id=\"outboundTable\"\n                  className=\"largeTable\"\n                >\n                  <thead>\n                    <tr>\n                      <th>Duration</th>\n                      <th>Flight</th>\n                      <th>Airports</th>\n                      <th>Dep</th>\n                      <th>Arr</th>\n                    </tr>\n                  </thead>\n\n                  <tbody>\n                    {props.outboundFlights.map(Flight => {\n                      if (Array.isArray(Flight.Flight)) {\n                        const stopsNumber = Flight.Flight.length - 1;\n                        const duration = getDuration(\n                          Flight.TotalJourney.Duration\n                        );\n                        return Flight.Flight.map((Flight, index) => {\n                          if (index === 0) {\n                            return (\n                              <tr>\n                                <td rowSpan={stopsNumber + 1}>\n                                  {duration} <br />\n                                  {stopsNumber}\n                                  {stopsNumber > 1 ? \" Stops\" : \" Stop\"}\n                                </td>\n                                <td>\n                                  {Flight.MarketingCarrier.AirlineID}{\" \"}\n                                  {Flight.MarketingCarrier.FlightNumber}\n                                </td>\n                                <td>\n                                  {Flight.Departure.AirportCode}-\n                                  {Flight.Arrival.AirportCode}\n                                </td>\n                                <td>\n                                  {getDateHour(\n                                    Flight.Departure.ScheduledTimeLocal.DateTime\n                                  )}\n                                </td>\n                                <td>\n                                  {getDateHour(\n                                    Flight.Arrival.ScheduledTimeLocal.DateTime\n                                  )}\n                                </td>\n                              </tr>\n                            );\n                          } else {\n                            return (\n                              <tr>\n                                <td>\n                                  {Flight.MarketingCarrier.AirlineID}{\" \"}\n                                  {Flight.MarketingCarrier.FlightNumber}\n                                </td>\n                                <td>\n                                  {Flight.Departure.AirportCode}-\n                                  {Flight.Arrival.AirportCode}\n                                </td>\n                                <td>\n                                  {getDateHour(\n                                    Flight.Departure.ScheduledTimeLocal.DateTime\n                                  )}\n                                </td>\n                                <td>\n                                  {getDateHour(\n                                    Flight.Arrival.ScheduledTimeLocal.DateTime\n                                  )}\n                                </td>\n                              </tr>\n                            );\n                          }\n                        });\n                      } else {\n                        return (\n                          <tr>\n                            <td>\n                              {getDuration(Flight.TotalJourney.Duration)}{\" \"}\n                              Non-stop\n                            </td>\n                            <td>\n                              {Flight.Flight.MarketingCarrier.AirlineID}{\" \"}\n                              {Flight.Flight.MarketingCarrier.FlightNumber}\n                            </td>\n                            <td>\n                              {Flight.Flight.Departure.AirportCode}-\n                              {Flight.Flight.Arrival.AirportCode}\n                            </td>\n                            <td>\n                              {getDateHour(\n                                Flight.Flight.Departure.ScheduledTimeLocal\n                                  .DateTime\n                              )}\n                            </td>\n                            <td>\n                              {getDateHour(\n                                Flight.Flight.Arrival.ScheduledTimeLocal\n                                  .DateTime\n                              )}\n                            </td>\n                          </tr>\n                        );\n                      }\n                    })}\n                  </tbody>\n                </Table>\n              </Tab>\n            )}\n            {props.hotelDetails.length > 0 && (\n              <Tab\n                eventKey=\"hotelsList\"\n                title=\"Hotels\"\n                className=\"custom-nav-bg\"\n              >\n                <Container className=\"resultsRow\">\n                  <Row className=\"row justify-content-center\">\n                    {props.hotelDetails.map(Hotel => {\n                      return (\n                        <Card\n                          style={{ align: \"center\", margin: \"2px\" }}\n                          className=\"col-xl-3 col-lg-3 col-md-12 col-sm-12 col-sm-12\"\n                        >\n                          <Link to={`/Hotels/${Hotel.code}`}>\n                            <Card.Img\n                              variant=\"top\"\n                              src={`http://photos.hotelbeds.com/giata/bigger/${\n                                Hotel.images[0].path\n                              }`}\n                              class=\"card-img-top\"\n                            />\n                          </Link>\n                          <Card.Body>\n                            <Card.Title>\n                              <Link to={`/Hotels/${Hotel.code}`}>\n                                {Hotel.name.content.toUpperCase()}\n                              </Link>\n                              <br />\n                              <img\n                                src={`http://cdn4.hotelopia.com/freya/img/stars/${\n                                  Hotel.categoryCode\n                                }.gif`}\n                                alt=\"Hotel Stars\"\n                              />\n                            </Card.Title>\n                            <Card.Text>\n                              <p class=\"block-with-text\">\n                                {Hotel.description.content}\n                              </p>\n                            </Card.Text>\n                          </Card.Body>\n                          <Card.Footer>\n                            <Link to={`/Hotels/${Hotel.code}`}>\n                              <Button variant=\"primary\">More info</Button>\n                            </Link>\n                          </Card.Footer>\n                        </Card>\n                      );\n                    })}\n                  </Row>\n                </Container>\n              </Tab>\n            )}\n\n            {props.activitiesDetails.length > 0 && (\n              <Tab\n                eventKey=\"activitiesList\"\n                title=\"Activities\"\n                className=\"custom-nav-bg\"\n              >\n                <Container style={{ align: \"center\" }}>\n                  <Row className=\"row justify-content-center\">\n                    {props.activitiesDetails.map(activity => {\n                      return (\n                        <Card\n                          style={{ align: \"center\", margin: \"2px\" }}\n                          className=\"col-xl-3 col-lg-3 col-md-12 col-sm-12 col-sm-12\"\n                        >\n                          <Link to={`/Activities/${activity.code}`}>\n                            <Card.Img\n                              variant=\"top\"\n                              src={`${\n                                activity.content.media.images[0].urls[1]\n                                  .resource\n                              }`}\n                              class=\"card-img-top\"\n                            />\n                          </Link>\n                          <Card.Body>\n                            <Card.Title>\n                              <Link to={`/Activities/${activity.code}`}>\n                                {activity.content.name.toUpperCase()}\n                              </Link>\n                            </Card.Title>\n                            <Card.Text>\n                              <p\n                                class=\"block-with-text\"\n                                dangerouslySetInnerHTML={{\n                                  __html: activity.content.description\n                                }}\n                              />\n                            </Card.Text>\n                          </Card.Body>\n                          <Card.Footer>\n                            <Link to={`/Activities/${activity.code}`}>\n                              <Button variant=\"primary\">More info</Button>\n                            </Link>\n                          </Card.Footer>\n                        </Card>\n                      );\n                    })}\n                  </Row>\n                </Container>\n              </Tab>\n            )}\n          </Tabs>\n        </div>\n      </center>\n    </div>\n  );\n};\n\nexport default HomeList;\n","import React, { Component } from \"react\";\nimport Hero from \"../components/hero/hero\";\nimport HomeForm from \"../components/Home/HomeForm\";\nimport HomeList from \"../components/Home/HomeList\";\n\nexport default class Home extends Component {\n  state = {\n    flightsDataInbound: [],\n    flightsDataOutbound: [],\n    hotelDetails: [],\n    activitiesDetails: []\n  };\n\n  refreshHomeList = (\n    flightsDataInbound,\n    flightsDataOutbound,\n    hotelDetails,\n    activitiesDetails\n  ) => {\n    this.setState({\n      flightsDataInbound: flightsDataInbound,\n      flightsDataOutbound: flightsDataOutbound,\n      hotelDetails: hotelDetails,\n      activitiesDetails: activitiesDetails\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <center>\n        <Hero\n          videosrc=\"https://pixabay.com/videos/download/video-10816_medium.mp4\"\n          h1=\"myTravelApp\"\n          h2=\"Flights + Hotels + Activities\"\n        />\n\n        <HomeForm refreshHomeList={this.refreshHomeList} />\n        <HomeList inboundFlights={this.state.flightsDataInbound}\n          outboundFlights={this.state.flightsDataOutbound}\n          hotelDetails={this.state.hotelDetails} \n          activitiesDetails = {this.state.activitiesDetails} />\n        </center>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Form, Button, Col } from \"react-bootstrap\";\nimport { getFlights } from \"../../services/Api\";\nimport { trackPromise } from \"react-promise-tracker\";\nimport {\n  getToday,\n  getFormDate,\n  getDateApi\n} from \"../../services/DateTimeFormating\";\n\nexport default class FlightsForm extends Component {\n  state = {\n    flightFrom: \"\",\n    flightTo: \"\",\n    dateFlightFrom: getToday(0),\n    dateFlightTo: getToday(0),\n    flightsDataInbound: [],\n    flightsDataOutbound: [],\n  };\n\n  handleChange = event => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  handleDateFlightFromChange = event => {\n    let newDateFrom = new Date(event.target.value);\n    let newDateTo = new Date(this.state.dateFlightTo);\n    if (newDateFrom > newDateTo) {\n      this.setState({\n        dateFlightFrom: newDateFrom,\n        dateFlightTo: newDateFrom\n      });\n    } else {\n      this.setState({\n        dateFlightFrom: newDateFrom\n      });\n    }\n  };\n\n  handleDateFlightToChange = event => {\n    let newDateFrom = new Date(this.state.dateFlightFrom);\n    let newDateTo = new Date(event.target.value);\n    if (newDateFrom > newDateTo) {\n      this.setState({\n        dateFlightFrom: newDateTo,\n        dateFlightTo: newDateTo\n      });\n    } else {\n      this.setState({\n        dateFlightTo: newDateTo\n      });\n    }\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n\n    const { flightFrom, flightTo, dateFlightFrom, dateFlightTo } = this.state;\n\n    trackPromise(\n      getFlights(\n        flightFrom,\n        flightTo,\n        getDateApi(dateFlightFrom),\n        getDateApi(dateFlightTo)\n      ).then(response => {\n        this.props.refreshflightsList(response.flightsDataInbound,response.flightsDataOutbound,this.state.nonStopOnly);\n        this.setState({\n          flightsDataInbound: response.flightsDataInbound,\n          flightsDataOutbound: response.flightsDataOutbound\n        });\n      })\n    ).catch(err => {\n      console.log(err);\n    });\n  };\n\n  render() {\n    return (\n      <div align=\"center\">\n        <br />\n\n        <Form onSubmit={this.handleSubmit} style={{ width: \"95%\" }}>\n          <Form.Row>\n            <Col lg=\"3\">\n              <Form.Label htmlFor=\"flightFrom\">From</Form.Label>\n\n              <Form.Control\n                type=\"text\"\n                onChange={this.handleChange}\n                id=\"flightFrom\"\n                name=\"flightFrom\"\n                value={this.state.flightFrom || \"\"}\n                placeholder=\"Origin airport IATA Code\"\n                required\n              />\n            </Col>\n\n            <Col lg=\"3\">\n              <Form.Label htmlFor=\"flightTo\">To</Form.Label>\n\n              <Form.Control\n                type=\"text\"\n                onChange={this.handleChange}\n                id=\"flightTo\"\n                name=\"flightTo\"\n                value={this.state.flightTo || \"\"}\n                placeholder=\"Destination airport IATA Code\"\n                required\n              />\n            </Col>\n\n            <Col lg=\"3\">\n              <Form.Label htmlFor=\"dateFlightFrom\">Depart</Form.Label>\n\n              <Form.Control\n                type=\"date\"\n                onChange={this.handleDateFlightFromChange}\n                id=\"dateFlightFrom\"\n                name=\"dateFlightFrom\"\n                value={getFormDate(this.state.dateFlightFrom)}\n                min={getFormDate(getToday(0))}\n                required\n              />\n            </Col>\n\n            <Col lg=\"3\">\n              <Form.Label htmlFor=\"dateFlightTo\">Return</Form.Label>\n\n              <Form.Control\n                type=\"date\"\n                onChange={this.handleDateFlightToChange}\n                id=\"dateFlightTo\"\n                name=\"dateFlightTo\"\n                value={getFormDate(this.state.dateFlightTo)}\n                min={getFormDate(getToday(0))}\n              />\n            </Col>\n          </Form.Row>\n          <Form.Row>\n            <Col>\n              <br />\n              <Button type=\"submit\" size=\"lg\">Flight Search</Button>\n            </Col>\n          </Form.Row>\n        </Form>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { Table, Tabs, Tab } from \"react-bootstrap\";\nimport { getDuration, getDateHour } from \"../../services/DateTimeFormating\";\n\nconst FlightsList = props => {\n  return (\n    <div\n      style={{\n        position: \"absolute\",\n        zIndex: 1,\n        width: \"100%\",\n        align: \"center\"\n      }}\n    >\n      <br />\n      <center>\n        <div\n          style={{\n            width: \"95%\",\n            align: \"center\"\n          }}\n        >\n          <Tabs defaultActiveKey=\"inbound\" className=\"with-nav-tabs.panel-primary nav-tabs\">\n            <br />\n\n            {props.inboundFlights.length > 0 && (\n              <Tab\n                eventKey=\"inbound\"\n                title=\"Depart Flights\"\n                className=\"with-nav-tabs.panel-primary nav-tabs panel.with-nav-tabs\"\n              >\n                <Table\n                  striped\n                  bordered\n                  hover\n                  variant=\"light\"\n                  id=\"inboundTable\"\n                  className=\"largeTable\"\n                >\n                  <thead>\n                    <tr>\n                      <th>Duration</th>\n                      <th>Flight</th>\n                      <th>Airports</th>\n                      <th>Dep</th>\n                      <th>Arr</th>\n                    </tr>\n                  </thead>\n\n                  <tbody>\n                    {props.inboundFlights.map(Flight => {\n                      if (Array.isArray(Flight.Flight)) {\n                        const stopsNumber = Flight.Flight.length - 1;\n                        const duration = getDuration(\n                          Flight.TotalJourney.Duration\n                        );\n                        return Flight.Flight.map((Flight, index) => {\n                          if (index === 0) {\n                            return (\n                              <tr>\n                                <td rowSpan={stopsNumber + 1}>\n                                  {duration} <br />\n                                  {stopsNumber}\n                                  {stopsNumber > 1 ? \" Stops\" : \" Stop\"}\n                                </td>\n                                <td>\n                                  {Flight.MarketingCarrier.AirlineID}{\" \"}\n                                  {Flight.MarketingCarrier.FlightNumber}\n                                </td>\n                                <td>\n                                  {Flight.Departure.AirportCode}-\n                                  {Flight.Arrival.AirportCode}\n                                </td>\n                                <td>\n                                  {getDateHour(\n                                    Flight.Departure.ScheduledTimeLocal.DateTime\n                                  )}\n                                </td>\n                                <td>\n                                  {getDateHour(\n                                    Flight.Arrival.ScheduledTimeLocal.DateTime\n                                  )}\n                                </td>\n                              </tr>\n                            );\n                          } else {\n                            return (\n                              <tr>\n                                <td>\n                                  {Flight.MarketingCarrier.AirlineID}{\" \"}\n                                  {Flight.MarketingCarrier.FlightNumber}\n                                </td>\n                                <td>\n                                  {Flight.Departure.AirportCode}-\n                                  {Flight.Arrival.AirportCode}\n                                </td>\n                                <td>\n                                  {getDateHour(\n                                    Flight.Departure.ScheduledTimeLocal.DateTime\n                                  )}\n                                </td>\n                                <td>\n                                  {getDateHour(\n                                    Flight.Arrival.ScheduledTimeLocal.DateTime\n                                  )}\n                                </td>\n                              </tr>\n                            );\n                          }\n                        });\n                      } else {\n                        return (\n                          <tr>\n                            <td>\n                              {getDuration(Flight.TotalJourney.Duration)}{\" \"}\n                              Non-stop\n                            </td>\n                            <td>\n                              {Flight.Flight.MarketingCarrier.AirlineID}{\" \"}\n                              {Flight.Flight.MarketingCarrier.FlightNumber}\n                            </td>\n                            <td>\n                              {Flight.Flight.Departure.AirportCode}-\n                              {Flight.Flight.Arrival.AirportCode}\n                            </td>\n                            <td>\n                              {getDateHour(\n                                Flight.Flight.Departure.ScheduledTimeLocal\n                                  .DateTime\n                              )}\n                            </td>\n                            <td>\n                              {getDateHour(\n                                Flight.Flight.Arrival.ScheduledTimeLocal\n                                  .DateTime\n                              )}\n                            </td>\n                          </tr>\n                        );\n                      }\n                    })}\n                  </tbody>\n                </Table>\n              </Tab>\n            )}\n\n            <br />\n\n            {props.outboundFlights.length > 0 && (\n              <Tab eventKey=\"outbound\" title=\"Return Flights\" className=\"with-nav-tabs.panel-primary nav-tabs\">\n                <Table\n                  striped\n                  bordered\n                  hover\n                  variant=\"light\"\n                  id=\"outboundTable\"\n                  className=\"largeTable\"\n                >\n                  <thead>\n                    <tr>\n                      <th>Duration</th>\n                      <th>Flight</th>\n                      <th>Airports</th>\n                      <th>Dep</th>\n                      <th>Arr</th>\n                    </tr>\n                  </thead>\n\n                  <tbody>\n                    {props.outboundFlights.map(Flight => {\n                      if (Array.isArray(Flight.Flight)) {\n                        const stopsNumber = Flight.Flight.length - 1;\n                        const duration = getDuration(\n                          Flight.TotalJourney.Duration\n                        );\n                        return Flight.Flight.map((Flight, index) => {\n                          if (index === 0) {\n                            return (\n                              <tr>\n                                <td rowSpan={stopsNumber + 1}>\n                                  {duration} <br />\n                                  {stopsNumber}\n                                  {stopsNumber > 1 ? \" Stops\" : \" Stop\"}\n                                </td>\n                                <td>\n                                  {Flight.MarketingCarrier.AirlineID}{\" \"}\n                                  {Flight.MarketingCarrier.FlightNumber}\n                                </td>\n                                <td>\n                                  {Flight.Departure.AirportCode}-\n                                  {Flight.Arrival.AirportCode}\n                                </td>\n                                <td>\n                                  {getDateHour(\n                                    Flight.Departure.ScheduledTimeLocal.DateTime\n                                  )}\n                                </td>\n                                <td>\n                                  {getDateHour(\n                                    Flight.Arrival.ScheduledTimeLocal.DateTime\n                                  )}\n                                </td>\n                              </tr>\n                            );\n                          } else {\n                            return (\n                              <tr>\n                                <td>\n                                  {Flight.MarketingCarrier.AirlineID}{\" \"}\n                                  {Flight.MarketingCarrier.FlightNumber}\n                                </td>\n                                <td>\n                                  {Flight.Departure.AirportCode}-\n                                  {Flight.Arrival.AirportCode}\n                                </td>\n                                <td>\n                                  {getDateHour(\n                                    Flight.Departure.ScheduledTimeLocal.DateTime\n                                  )}\n                                </td>\n                                <td>\n                                  {getDateHour(\n                                    Flight.Arrival.ScheduledTimeLocal.DateTime\n                                  )}\n                                </td>\n                              </tr>\n                            );\n                          }\n                        });\n                      } else {\n                        return (\n                          <tr>\n                            <td>\n                              {getDuration(Flight.TotalJourney.Duration)}{\" \"}\n                              Non-stop\n                            </td>\n                            <td>\n                              {Flight.Flight.MarketingCarrier.AirlineID}{\" \"}\n                              {Flight.Flight.MarketingCarrier.FlightNumber}\n                            </td>\n                            <td>\n                              {Flight.Flight.Departure.AirportCode}-\n                              {Flight.Flight.Arrival.AirportCode}\n                            </td>\n                            <td>\n                              {getDateHour(\n                                Flight.Flight.Departure.ScheduledTimeLocal\n                                  .DateTime\n                              )}\n                            </td>\n                            <td>\n                              {getDateHour(\n                                Flight.Flight.Arrival.ScheduledTimeLocal\n                                  .DateTime\n                              )}\n                            </td>\n                          </tr>\n                        );\n                      }\n                    })}\n                  </tbody>\n                </Table>\n              </Tab>\n            )}\n          </Tabs>\n        </div>\n      </center>\n    </div>\n  );\n};\n\nexport default FlightsList;\n","import React, { Component } from \"react\";\nimport Hero from \"../components/hero/hero\";\nimport FlightsForm from \"../components/Flights/FlightsForm\";\nimport FlightsList from \"../components/Flights/FlightsList\";\n\nexport default class Flights extends Component {\n  state = {\n    flightsDataInbound: [],\n    flightsDataOutbound: []\n  };\n\n  refreshflightsList = (\n    flightsDataInbound,\n    flightsDataOutbound\n  ) => {\n    this.setState({\n      flightsDataInbound: flightsDataInbound,\n      flightsDataOutbound: flightsDataOutbound\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <center>\n          <Hero\n            videosrc=\"https://pixabay.com/videos/download/video-10816_medium.mp4\"\n            h1=\"Flights\"\n            h2=\"First, Business or Economy. Choose your Flights\"\n          />\n          <FlightsForm refreshflightsList={this.refreshflightsList} />\n          <FlightsList\n            inboundFlights={this.state.flightsDataInbound}\n            outboundFlights={this.state.flightsDataOutbound}\n          />\n        </center>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Form, Button, Col, Row, Container } from \"react-bootstrap\";\nimport { getHotels } from \"../../services/Api\";\nimport { trackPromise } from \"react-promise-tracker\";\nimport {\n  getToday,\n  getFormDate,\n  getDateApi,\n  getDatePlus\n} from \"../../services/DateTimeFormating\";\n\nexport default class HotelsForm extends Component {\n  state = {\n    flightTo: \"\",\n    dateFlightFrom: getToday(0),\n    dateFlightTo: getToday(1),\n    hotelsData: [],\n    error: \"\"\n  };\n\n  handleChange = event => {\n    const { name, value } = event.target;\n\n    this.setState({\n      [name]: value\n    });\n  };\n\n  handleDateFlightFromChange = event => {\n    let newDateFrom = new Date(event.target.value);\n    let newDateTo = new Date(this.state.dateFlightTo);\n\n    if (newDateFrom >= newDateTo) {\n      this.setState({\n        dateFlightFrom: newDateFrom,\n        dateFlightTo: getDatePlus(newDateFrom, 1)\n      });\n    } else {\n      this.setState({\n        dateFlightFrom: newDateFrom\n      });\n    }\n  };\n\n  handleDateFlightToChange = event => {\n    let newDateFrom = new Date(this.state.dateFlightFrom);\n    let newDateTo = new Date(event.target.value);\n    if (newDateFrom >= newDateTo) {\n      this.setState({\n        dateFlightFrom: getDatePlus(newDateTo, -1),\n        dateFlightTo: newDateTo\n      });\n    } else {\n      this.setState({\n        dateFlightTo: newDateTo\n      });\n    }\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n\n    const { flightTo, dateFlightFrom, dateFlightTo } = this.state;\n\n    trackPromise(\n      getHotels(\n        flightTo,\n        getDateApi(dateFlightFrom),\n        getDateApi(dateFlightTo)\n      ).then(response => {\n        this.props.refreshHotelsList(response);\n        this.setState({\n          hotelsData: response.hotelsData\n        });\n      })\n    ).catch(err => {\n      console.log(err);\n    });\n  };\n\n  render() {\n    return (\n      <div align=\"center\">\n        <Container>\n          <Row>\n            <Col lg={true}>\n              <Form onSubmit={this.handleSubmit} style={{ width: \"95%\" }}>\n                <Form.Row>\n                  <Col lg=\"4\">\n                    <Form.Label htmlFor=\"flightTo\">\n                      <h5>Hotel Location</h5>\n                    </Form.Label>\n\n                    <Form.Control\n                      type=\"text\"\n                      onChange={this.handleChange}\n                      id=\"flightTo\"\n                      name=\"flightTo\"\n                      value={this.state.flightTo || \"\"}\n                      placeholder=\"Destination airport IATA Code\"\n                      required\n                    />\n                  </Col>\n\n                  <Col lg=\"4\">\n                    <Form.Label htmlFor=\"dateFlightFrom\">\n                      <h5>Date From</h5>\n                    </Form.Label>\n\n                    <Form.Control\n                      type=\"date\"\n                      onChange={this.handleDateFlightFromChange}\n                      id=\"dateFlightFrom\"\n                      name=\"dateFlightFrom\"\n                      value={getFormDate(this.state.dateFlightFrom)}\n                      min={getFormDate(getToday(0))}\n                      required\n                    />\n                  </Col>\n\n                  <Col lg=\"4\">\n                    <Form.Label htmlFor=\"dateFlightTo\">\n                      <h5>Date To</h5>\n                    </Form.Label>\n\n                    <Form.Control\n                      type=\"date\"\n                      onChange={this.handleDateFlightToChange}\n                      id=\"dateFlightTo\"\n                      name=\"dateFlightTo\"\n                      value={getFormDate(this.state.dateFlightTo)}\n                      min={getFormDate(getToday(1))}\n                    />\n                  </Col>\n                </Form.Row>\n                <Form.Row>\n                  <Col>\n                    <br />\n                    <Button type=\"submit\" size=\"lg\">Hotel Search</Button>\n                  </Col>\n                </Form.Row>\n              </Form>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Container, Row, Card, Button, Tabs, Tab } from \"react-bootstrap\";\nimport ReactMapGL, { Marker } from \"react-map-gl\";\nimport { Icon } from \"react-icons-kit\";\nimport { home } from \"react-icons-kit/icomoon/home\";\n\nexport default class HotelsList extends Component {\n  state = {\n    hotelDetails: [],\n    viewport: {\n      width: 200,\n      height: 200,\n      zoom: 5,\n      latitude: 40,\n      longitude: 20\n    }\n  };\n\n  render() {\n    return (\n      <div\n        style={{\n          position: \"absolute\",\n          zIndex: 1,\n          width: \"100%\",\n          align: \"center\"\n        }}\n      >\n        <br />\n        <center>\n          <div\n            style={{\n              width: \"95%\",\n              align: \"center\",\n              backgroundColor: \"white\"\n            }}\n          >\n            <Tabs defaultActiveKey=\"hotelsList\" className=\"custom-nav-bg\">\n              <br />\n              {this.props.hotelsData.length > 0 && (\n                <Tab\n                  eventKey=\"hotelsList\"\n                  title=\"Hotel List\"\n                  className=\"custom-nav-bg\"\n                >\n                  <Container style={{ textAlignment: \"center\" }}>\n                    <Row className=\"row justify-content-center\">\n                      {this.props.hotelsData.map(Hotel => {\n                        return (\n                          <Card\n                            style={{ align: \"center\", margin: \"2px\" }}\n                            className=\"col-xl-3 col-lg-3 col-md-12 col-sm-12 col-sm-12\"\n                          >\n                            <Link to={`/Hotels/${Hotel.code}`}>\n                              <Card.Img\n                                variant=\"top\"\n                                src={`http://photos.hotelbeds.com/giata/bigger/${\n                                  Hotel.images[0].path\n                                }`}\n                                class=\"card-img-top\"\n                              />\n                            </Link>\n                            <Card.Body>\n                              <Card.Title>\n                                <Link to={`/Hotels/${Hotel.code}`}>\n                                  {Hotel.name.content.toUpperCase()}\n                                </Link>\n                                <br />\n                                <img\n                                  src={`http://cdn4.hotelopia.com/freya/img/stars/${\n                                    Hotel.categoryCode\n                                  }.gif`}\n                                  alt=\"Hotel Stars\"\n                                />\n                              </Card.Title>\n                              <Card.Text>\n                                <p class=\"block-with-text\">\n                                  {Hotel.description.content}\n                                </p>\n                              </Card.Text>\n                            </Card.Body>\n                            <Card.Footer>\n                              <Link to={`/Hotels/${Hotel.code}`}>\n                                <Button variant=\"primary\">More info</Button>\n                              </Link>\n                            </Card.Footer>\n                          </Card>\n                        );\n                      })}\n                    </Row>\n                  </Container>\n                </Tab>\n              )}\n              {this.props.hotelsData.length > 0 && (\n                <Tab eventKey=\"hotelsMap\" title=\"Hotels Map\">\n                  <ReactMapGL {...this.state.viewport}>\n                    {this.props.hotelsData.map(Hotel => {\n                      return (\n                        <Marker\n                          latitude={Hotel.coordinates.latitude}\n                          longitude={Hotel.coordinates.longitude}\n                          offsetLeft={-20}\n                          offsetTop={-10}\n                        >\n                          {console.log(\n                            Hotel.coordinates.latitude,\n                            Hotel.coordinates.longitude\n                          )}\n                          <Link to={`/Hotels/${Hotel.code}`}>\n                            <Icon icon={home} />{\" \"}\n                            {Hotel.name.content.toUpperCase()}\n                          </Link>\n                        </Marker>\n                      );\n                    })}\n                  </ReactMapGL>\n                </Tab>\n              )}\n            </Tabs>\n          </div>\n        </center>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Hero from \"../components/hero/hero\";\nimport HotelsForm from \"../components/Hotels/HotelsForm\";\nimport HotelsList from \"../components/Hotels/HotelsList\";\n\nexport default class Hotels extends Component {\n  state = {\n    hotelsData: []\n  };\n\n  refreshHotelsList = response => {\n    this.setState({\n      hotelsData: response.hotelsData\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <center>\n        <Hero\n          videosrc=\"https://pixabay.com/videos/download/video-24216_medium.mp4\"\n          h1=\"Hotels\"\n          h2=\"Whether luxurious, comfortable or just exciting. Choose your Hotel\"\n        />\n\n        <HotelsForm refreshHotelsList={this.refreshHotelsList} />\n        <HotelsList hotelsData={this.state.hotelsData} />\n        </center>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { getHotelDetails } from \"../services/Api\";\nimport { Col, Row } from \"react-bootstrap\";\nimport Carousel from \"react-bootstrap/Carousel\";\nimport Hero from \"../components/hero/hero\";\nimport ReactMapGL, { Marker } from \"react-map-gl\";\nimport { Icon } from \"react-icons-kit\";\nimport { home } from \"react-icons-kit/icomoon/home\";\n\nexport default class HotelDetails extends Component {\n  state = {\n    hotelDetails: [],\n    width: 400,\n    height: 400,\n    zoom: 13\n  };\n\n  getHotelData = () => {\n    const hotelId = this.props.match.params.id;\n\n    return getHotelDetails(hotelId)\n      .then(response => {\n        this.setState({\n          hotelDetails: response\n        });\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  componentDidMount() {\n    this.getHotelData();\n  }\n\n  render() {\n    return (\n      <div align=\"center\" style={{ width: \"100%\" }}>\n        <Hero videosrc=\"https://pixabay.com/videos/download/video-24216_medium.mp4\" />\n\n        {Object.entries(this.state.hotelDetails).length > 0 && (\n          <div\n            style={{\n              width: \"95%\",\n              backgroundColor: \"white\",\n              padding: \"10px\",\n              textAlign: \"left\"\n            }}\n          >\n            <Row>\n              <Col className=\"col-xl-12\">\n                <h2>\n                  {this.state.hotelDetails.hotel.name.content}\n                  <img\n                    src={`http://cdn4.hotelopia.com/freya/img/stars/${\n                      this.state.hotelDetails.hotel.category.code\n                    }.gif`}\n                    alt=\"Hotel Stars\"\n                  />\n                </h2>\n              </Col>\n            </Row>\n            <Row>\n              <Col className=\"col-xl-6 col-lg-6 col-md-6 col-sm-12 col-sm-12\">\n                <h5>Description</h5>\n                <p>{this.state.hotelDetails.hotel.description.content}</p>\n\n                <h5>Location</h5>\n                <p>\n                  {this.state.hotelDetails.hotel.address.content}{\" \"}\n                  {this.state.hotelDetails.hotel.postalCode}{\" \"}\n                  {this.state.hotelDetails.hotel.city.content}{\" \"}\n                  {this.state.hotelDetails.hotel.country.description.content}\n                </p>\n                <ReactMapGL\n                  latitude={this.state.hotelDetails.hotel.coordinates.latitude}\n                  longitude={\n                    this.state.hotelDetails.hotel.coordinates.longitude\n                  }\n                  width={this.state.width}\n                  height={this.state.height}\n                  zoom={this.state.zoom}\n                >\n                  <Marker\n                    latitude={\n                      this.state.hotelDetails.hotel.coordinates.latitude\n                    }\n                    longitude={\n                      this.state.hotelDetails.hotel.coordinates.longitude\n                    }\n                  >\n                    <Icon icon={home} />\n                    <h5>{this.state.hotelDetails.hotel.name.content}</h5>\n                  </Marker>\n                </ReactMapGL>\n              </Col>\n              <Col className=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 col-sm-12\">\n                <h5>Photos</h5>\n                <center>\n                  <Carousel className=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-sm-12\">\n                    {this.state.hotelDetails.hotel.images.map(image => {\n                      return (\n                        <Carousel.Item>\n                          <img\n                            className=\"d-block w-100\"\n                            src={`http://photos.hotelbeds.com/giata/bigger/${\n                              image.path\n                            }`}\n                            alt=\" \"\n                          />\n                        </Carousel.Item>\n                      );\n                    })}\n                  </Carousel>\n                </center>\n              </Col>\n            </Row>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Form, Button, Col, Row, Container } from \"react-bootstrap\";\nimport { getActivities } from \"../../services/Api\";\nimport { trackPromise } from \"react-promise-tracker\";\nimport {\n  getToday,\n  getFormDate,\n  getDateApi,\n  getDatePlus\n} from \"../../services/DateTimeFormating\";\n\nexport default class ActivitiesForm extends Component {\n  state = {\n    flightTo: \"\",\n    dateFlightFrom: getToday(0),\n    dateFlightTo: getToday(1),\n    activitiesData: []\n  };\n\n  handleChange = event => {\n    const { name, value } = event.target;\n\n    this.setState({\n      [name]: value\n    });\n  };\n\n  handleDateFlightFromChange = event => {\n    let newDateFrom = new Date(event.target.value);\n    let newDateTo = new Date(this.state.dateFlightTo);\n\n    if (newDateFrom >= newDateTo) {\n      this.setState({\n        dateFlightFrom: newDateFrom,\n        dateFlightTo: getDatePlus(newDateFrom, 0)\n      });\n    } else {\n      this.setState({\n        dateFlightFrom: newDateFrom\n      });\n    }\n  };\n\n  handleDateFlightToChange = event => {\n    let newDateFrom = new Date(this.state.dateFlightFrom);\n    let newDateTo = new Date(event.target.value);\n    if (newDateFrom >= newDateTo) {\n      this.setState({\n        dateFlightFrom: getDatePlus(newDateTo, 0),\n        dateFlightTo: newDateTo\n      });\n    } else {\n      this.setState({\n        dateFlightTo: newDateTo\n      });\n    }\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n\n    const { flightTo, dateFlightFrom, dateFlightTo } = this.state;\n\n    trackPromise(\n      getActivities(\n        flightTo,\n        getDateApi(dateFlightFrom),\n        getDateApi(dateFlightTo)\n      ).then(response => {\n        console.log(response.activitiesList.activities);\n        this.props.refreshActivitiesList(response.activitiesList.activities);\n        this.setState({\n          activitiesData: response.activitiesList.activities\n        });\n      })\n    ).catch(err => {\n      console.log(err);\n    });\n  };\n\n  render() {\n    return (\n      <div align=\"center\">\n        <Container>\n          <Row>\n            <Col lg={true}>\n              <Form onSubmit={this.handleSubmit} style={{ width: \"95%\" }}>\n                <Form.Row>\n                  <Col lg=\"4\">\n                    <Form.Label htmlFor=\"flightTo\">\n                      <h5>\n                        Activity Location\n                      </h5>\n                    </Form.Label>\n                    <Form.Control\n                      type=\"text\"\n                      onChange={this.handleChange}\n                      id=\"flightTo\"\n                      name=\"flightTo\"\n                      value={this.state.flightTo || \"\"}\n                      placeholder=\"Destination airport IATA Code\"\n                      required\n                    />\n                  </Col>\n\n                  <Col lg=\"4\">\n                    <Form.Label htmlFor=\"dateFlightFrom\">\n                    <h5>\n                        Date From\n                      </h5>\n                    </Form.Label>\n                    <Form.Control\n                      type=\"date\"\n                      onChange={this.handleDateFlightFromChange}\n                      id=\"dateFlightFrom\"\n                      name=\"dateFlightFrom\"\n                      value={getFormDate(this.state.dateFlightFrom)}\n                      min={getFormDate(getToday(0))}\n                      required\n                    />\n                  </Col>\n\n                  <Col lg=\"4\">\n                    <Form.Label htmlFor=\"dateFlightTo\">\n                    <h5>\n                        Date To\n                      </h5>\n                    </Form.Label>\n\n                    <Form.Control\n                      type=\"date\"\n                      onChange={this.handleDateFlightToChange}\n                      id=\"dateFlightTo\"\n                      name=\"dateFlightTo\"\n                      value={getFormDate(this.state.dateFlightTo)}\n                      min={getFormDate(getToday(1))}\n                      required\n                    />\n                  </Col>\n                </Form.Row>\n                <Form.Row>\n                  <Col>\n                    <br />\n                    <Button type=\"submit\" size=\"lg\">Activities Search</Button>\n                  </Col>\n                </Form.Row>\n              </Form>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Container,\n  Row,\n  Card,\n  Button\n} from \"react-bootstrap\";\n\nconst ActivitiesList = props => {\n  return (\n    <div\n      style={{\n        position: \"absolute\",\n        zIndex: 1,\n        width: \"100%\",\n        align: \"center\"\n      }}\n    >\n      <br />\n\n      {props.activitiesData.length > 0 && (\n        <Container style={{align: \"center\"}}>\n          <Row className=\"row justify-content-center\">\n            {props.activitiesData.map(activity => {\n              return (\n                <Card\n                  style={{align: \"center\", margin: \"2px\" }}\n                  className=\"col-xl-3 col-lg-3 col-md-12 col-sm-12 col-sm-12\"\n                >\n                  <Link to={`/Activities/${activity.code}`}>\n                    <Card.Img\n                      variant=\"top\"\n                      src={`${\n                        activity.content.media.images[0].urls[1].resource\n                      }`}\n                      class=\"card-img-top\"\n                    />\n                  </Link>\n                  <Card.Body>\n                    <Card.Title>\n                      <Link to={`/Activities/${activity.code}`}>\n                        {activity.content.name.toUpperCase()}\n                      </Link>\n                    </Card.Title>\n                    <Card.Text>\n                      <p\n                        class=\"block-with-text\"\n                        dangerouslySetInnerHTML={{\n                          __html: activity.content.description\n                        }}\n                      />\n                    </Card.Text>\n                  </Card.Body>\n                  <Card.Footer>\n                    <Link to={`/Activities/${activity.code}`}>\n                      <Button variant=\"primary\">More info</Button>\n                    </Link>\n                  </Card.Footer>\n                </Card>\n              );\n            })}\n          </Row>\n        </Container>\n      )}\n    </div>\n  );\n};\n\nexport default ActivitiesList;\n","import React, { Component } from \"react\";\nimport Hero from \"../components/hero/hero\";\nimport ActivitiesForm from \"../components/Activities/ActivitiesForm\";\nimport ActivitiesList from \"../components/Activities/ActivitiesList\";\n\nexport default class Activities extends Component {\n  state = {\n    activitiesData: []\n  };\n\n  refreshActivitiesList = response => {\n    this.setState({\n      activitiesData: response\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <center>\n          <Hero\n            videosrc=\"https://pixabay.com/videos/download/video-10816_medium.mp4\"\n            h1=\"Experience the new\"\n            h2=\"Guide yourself through the most exciting Activities\"\n          />\n\n          <ActivitiesForm refreshActivitiesList={this.refreshActivitiesList} />\n          <ActivitiesList activitiesData={this.state.activitiesData} />\n        </center>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { getActivityDetails } from \"../services/Api\";\nimport Hero from \"../components/hero/hero\";\n\nexport default class ActivityDetails extends Component {\n  state = {\n    activityDetails: {}\n  };\n\n  getActivityData = () => {\n    const activityId = this.props.match.params.id;\n\n    return getActivityDetails(activityId)\n      .then(response => {\n        this.setState({\n          activityDetails: response\n        });\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  componentDidMount() {\n    this.getActivityData();\n  }\n\n  render() {\n    return (\n      <div align=\"center\" style={{ width: \"100%\" }}>\n        <Hero videosrc=\"https://pixabay.com/videos/download/video-10816_medium.mp4\" />\n\n        <div style={{ width: \"95%\",backgroundColor: \"white\", padding:\"10px\",textAlign: \"left\" }}>\n        <h2>{this.state.activityDetails.name}</h2>\n\n        <div\n          dangerouslySetInnerHTML={{\n            __html: this.state.activityDetails.description\n          }}\n          align=\"left\"\n        />\n      </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport \"./App.css\";\nimport Navbar from \"./components/Navbar\";\nimport { Switch, Route } from \"react-router-dom\";\nimport Home from \"./containers/Home\";\nimport Flights from \"./containers/Flights\";\nimport Hotels from \"./containers/Hotels\";\nimport HotelDetails from \"./containers/HotelDetails\";\nimport Activities from \"./containers/Activities\";\nimport ActivityDetails from \"./containers/ActivityDetails\";\nimport \"mapbox-gl/dist/mapbox-gl.css\"\n\nfunction App() {\n  return (\n    <>\n      <Navbar />\n\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route exact path=\"/Flights\" component={Flights} />\n        <Route exact path=\"/Hotels\" component={Hotels} />\n        <Route exact path=\"/Hotels/:id\" component={HotelDetails} />\n        <Route exact path=\"/Activities\" component={Activities} />\n        <Route exact path=\"/Activities/:id\" component={ActivityDetails} />\n      </Switch>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from \"react-router-dom\";\nimport { usePromiseTracker } from \"react-promise-tracker\";\nimport Loader from 'react-loader-spinner';\n\nconst LoadingIndicator = props => {\n  const { promiseInProgress } = usePromiseTracker();\n\n  return promiseInProgress && \n    <div\n      style={{\n        position: \"absolute\",\n        zIndex: 2147483647,\n        width: \"100%\",\n        height: \"100\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\"\n      }}\n    >\n      <Loader type=\"Plane\" color=\"#428bca\" height=\"100\" width=\"100\" />\n</div>\n};\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n    <LoadingIndicator/>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}